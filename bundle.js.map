{"version":3,"file":"bundle.js","sources":["node_modules/tslib/tslib.es6.js","node_modules/@bhmb/bot/es/player.js","node_modules/blockheads-cloud-api/build_es.js","node_modules/@bhmb/ui/index.js","node_modules/@bhmb/messages/index.js","node_modules/@bhmb/console/index.js","src/extensions.ts","node_modules/@bhmb/bot/es/extension.js","node_modules/@bhmb/bot/es/events.js","node_modules/@bhmb/bot/es/chatWatcher.js","node_modules/@bhmb/bot/es/world.js","node_modules/@bhmb/bot/es/storage.js","node_modules/@bhmb/bot/es/index.js","src/bot.ts","src/storage.ts","src/settings.ts","src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function equalCaseInsensitive(a, b) {\n    return a.localeCompare(b, undefined, { sensitivity: 'base' }) === 0;\n}\nfunction arrayContainsAny(haystack, ...needles) {\n    return haystack.some(item => needles.some(needle => equalCaseInsensitive(item, needle)));\n}\n/**\n * Player class which is returned by the [[World.getPlayer]] method. Should not be created by any other method.\n */\nexport class Player {\n    /**\n     * Creates a new instance of the Player class.\n     *\n     * @param name The name of the player.\n     * @param info The player info stored between bot launches.\n     */\n    constructor(name, info, lists) {\n        this._name = name;\n        this._info = info;\n        this._lists = lists;\n    }\n    /**\n     * Gets the player's name.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Gets the most recently used IP of the player.\n     */\n    get ip() {\n        return this._info.ip;\n    }\n    /**\n     * Gets the all IPs used by the player on the world.\n     */\n    get ips() {\n        return [...this._info.ips];\n    }\n    /**\n     * Gets the number of times the player has joined the server.\n     */\n    get joins() {\n        return this._info.joins;\n    }\n    /**\n     * Checks if the player has joined the server.\n     */\n    get hasJoined() {\n        return this.joins > 0;\n    }\n    /**\n     * Returns true if the player is the owner of the server or is the server.\n     */\n    get isOwner() {\n        return !!this._info.owner || this._name == 'SERVER';\n    }\n    /**\n     * Checks if the player is an admin or the owner.\n     */\n    get isAdmin() {\n        // A player is admin if their name or their latest IP is listed on the adminlist, or they are the owner.\n        return this.isOwner || arrayContainsAny(this._lists.adminlist, this._name, this._info.ip);\n    }\n    /**\n     * Checks if the player is a mod without admin permissions.\n     */\n    get isMod() {\n        // A player is mod if their name or their latest IP is on the modlist\n        return !this.isAdmin && arrayContainsAny(this._lists.modlist, this._name, this._info.ip);\n    }\n    /**\n     * Checks if the player is an admin or a mod.\n     */\n    get isStaff() {\n        return this.isAdmin || this.isMod;\n    }\n    /**\n     * Checks if the player is whitelisted. Is true if the player can join the server while it is whitelisted.\n     */\n    get isWhitelisted() {\n        // A player is whitelisted if they are staff or if their name or latest ip is on the whitelist.\n        return this.isStaff || arrayContainsAny(this._lists.whitelist, this._name, this._info.ip);\n    }\n    /**\n     * Checks if the player is banned.\n     */\n    get isBanned() {\n        return !this.isStaff && this._lists.blacklist\n            .some(entry => {\n            // We don't know the current player's device ID so can't check for that on the blacklist\n            // If the player's name is on the blacklist, they are banned.\n            // If an IP the player has used is banned, they are *probably* banned, so guess that they are.\n            // Remove device ID from blacklist entry, if there is one\n            if (entry.includes(' \\\\'))\n                entry = entry.substr(0, entry.indexOf(' \\\\'));\n            if (equalCaseInsensitive(this._name, entry))\n                return true;\n            if (this._info.ips.includes(entry))\n                return true;\n            return false;\n        });\n    }\n}\n//# sourceMappingURL=player.js.map","import { createHash } from 'crypto';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n/**\r\n * This module should not be used by consumers of this library.\r\n * @private\r\n */\r\n/**\r\n * Parses logs from the portal into a standard format. If you are consuming this library, you don't need to know anything about it.\r\n * @private\r\n */\r\nclass LogParser {\r\n    /**\r\n     * Creates a new instance of the LogParser class.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Parses the logs into a standard format.\r\n         *\r\n         * @param lines the raw log lines.\r\n         */\r\n        this.parse = (lines) => {\r\n            // Copy the lines array\r\n            lines = lines.slice(0);\r\n            // Assume first line is valid, if it isn't it will be dropped.\r\n            for (let i = lines.length - 1; i > 0; i--) {\r\n                const line = lines[i];\r\n                if (!this.isValidLine(line)) {\r\n                    lines[i - 1] += '\\n' + lines.splice(i, 1);\r\n                    continue;\r\n                }\r\n                this.addLine(line);\r\n            }\r\n            if (this.isValidLine(lines[0])) {\r\n                this.addLine(lines[0]);\r\n            }\r\n            const entries = this.entries.reverse();\r\n            this.entries = [];\r\n            return entries;\r\n        };\r\n        this.isValidLine = (line) => {\r\n            return /^\\d{4}-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d\\.\\d{3} blockheads_server/.test(line);\r\n        };\r\n        this.addLine = (line) => {\r\n            const ts = line.substr(0, 24)\r\n                .replace(' ', 'T')\r\n                .replace(' ', 'Z');\r\n            this.entries.push({\r\n                raw: line,\r\n                timestamp: new Date(ts),\r\n                message: line.substr(line.indexOf(']') + 2)\r\n            });\r\n        };\r\n        this.entries = [];\r\n    }\r\n}\n\nfunction sha1(str) {\r\n    return createHash('sha1')\r\n        .update(str)\r\n        .digest('hex');\r\n}\r\nconst root = 'http://portal.theblockheads.net';\r\nlet request;\r\ntry {\r\n    request = fetch;\r\n}\r\ncatch (_) { }\r\n// Makes it possible to set the fetch function which the module uses. Necessary for terminal usage.\r\nfunction setFetch(fn) {\r\n    request = fn;\r\n}\r\nfunction unescapeHTML(html) {\r\n    const map = {\r\n        'lt': '<',\r\n        'gt': '>',\r\n        'amp': '&',\r\n        '#39': '\\'',\r\n        'quot': '\"',\r\n    };\r\n    return html.replace(/&(lt|gt|amp|#39|quot);/g, (_, first) => map[first]);\r\n}\r\nfunction makeRequest(url, options = {}) {\r\n    const headers = { 'X-Requested-With': 'XMLHttpRequest' };\r\n    if (options.method == 'POST') {\r\n        headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    }\r\n    return request(`${root}${url}`, Object.assign({ mode: 'same-origin', credentials: 'same-origin', redirect: 'follow', \r\n        // Typescript incorrectly throws an error due to types here\r\n        headers: headers }, options));\r\n}\r\nfunction requestJSON(url, options) {\r\n    return makeRequest(url, options).then(r => r.json());\r\n}\r\nfunction requestPage(url, options) {\r\n    return makeRequest(url, options).then(r => r.text());\r\n}\r\n/**\r\n* Function to try to log in, if the log in fails, the returned promise will reject, otherwise it will resolve.\r\n*\r\n* @param username the username to try to log in with\r\n* @param password the password to try to log in with\r\n*/\r\nfunction login(username, password) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        username = username.toLocaleUpperCase();\r\n        const info = yield requestJSON('/login', {\r\n            method: 'POST',\r\n            body: `username=${encodeURIComponent(username)}`,\r\n        });\r\n        if (info.status != 'ok')\r\n            throw new Error('Bad API response.');\r\n        let hashedPass = sha1(info.salt + password);\r\n        hashedPass = sha1(hashedPass + info.salt2);\r\n        const body = `seed=${info.seed}&password=${hashedPass}&username=${encodeURIComponent(username)}`;\r\n        const page = yield requestPage('/login', { body, method: 'POST' });\r\n        if (page.includes('Invalid username / password')) {\r\n            throw new Error('Invalid username or password.');\r\n        }\r\n    });\r\n}\r\n/**\r\n* Gets all worlds owned by the logged in user.\r\n*/\r\nfunction getWorlds() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const page = yield requestPage('/worlds');\r\n        const lines = page.split('\\n');\r\n        const worlds = [];\r\n        lines.forEach(line => {\r\n            if (/\\t\\tupdateWorld/.test(line)) {\r\n                const name = line.match(/name: '([^']+?)'/);\r\n                const id = line.match(/id: (\\d+)/);\r\n                worlds.push({\r\n                    name: unescapeHTML(name[1]),\r\n                    id: id[1]\r\n                });\r\n            }\r\n        });\r\n        return worlds;\r\n    });\r\n}\r\n/** @inheritdoc */\r\nclass Api {\r\n    constructor(info) {\r\n        this.info = info;\r\n        this.parser = new LogParser();\r\n        /** @inheritdoc */\r\n        this.getLists = () => __awaiter(this, void 0, void 0, function* () {\r\n            const page = yield requestPage(`/worlds/lists/${this.info.id}`);\r\n            const getList = (name) => {\r\n                let names = [];\r\n                const list = page.match(new RegExp(`<textarea name=\"${name}\">([\\\\s\\\\S]*?)</textarea>`));\r\n                if (list) {\r\n                    names = unescapeHTML(list[1])\r\n                        .split(/\\r?\\n/);\r\n                }\r\n                // Remove duplicates / blank lines\r\n                return Array.from(new Set(names)).filter(Boolean);\r\n            };\r\n            return {\r\n                adminlist: getList('admins'),\r\n                modlist: getList('modlist'),\r\n                whitelist: getList('whitelist'),\r\n                blacklist: getList('blacklist'),\r\n            };\r\n        });\r\n        /** @inheritdoc */\r\n        this.setLists = (lists) => __awaiter(this, void 0, void 0, function* () {\r\n            const makeSafe = (list) => encodeURIComponent(list.join('\\n'));\r\n            let body = `admins=${makeSafe(lists.adminlist)}`;\r\n            body += `&modlist=${makeSafe(lists.modlist)}`;\r\n            body += `&whitelist=${makeSafe(lists.whitelist)}`;\r\n            body += `&blacklist=${makeSafe(lists.blacklist)}`;\r\n            yield requestJSON(`/worlds/lists/${this.info.id}`, {\r\n                method: 'POST',\r\n                body\r\n            });\r\n        });\r\n        /** @inheritdoc */\r\n        this.getOverview = () => __awaiter(this, void 0, void 0, function* () {\r\n            const page = yield requestPage(`/worlds/${this.info.id}`);\r\n            const firstMatch = (r, fallback = '') => {\r\n                const m = page.match(r);\r\n                return m ? m[1] : fallback;\r\n            };\r\n            const privacy = firstMatch(/^\\$\\('#privacy'\\).val\\('(.*?)'\\)/m, 'public');\r\n            let online = [];\r\n            const match = page.match(/^\\t<tr><td class=\"left\">(.*?)(?=<\\/td>)/gm);\r\n            if (match) {\r\n                online = online.concat(match.map(s => s.substr(22)));\r\n            }\r\n            // This is very messy, refactoring welcome.\r\n            return {\r\n                name: firstMatch(/^\\t<title>(.*?) Manager \\| Portal<\\/title>$/m),\r\n                owner: firstMatch(/^\\t\\t<td class=\"right\">Owner:<\\/td>\\r?\\n\\t\\t<td>(.*?)<\\/td>$/m),\r\n                created: new Date(firstMatch(/^\\t\\t<td>Created:<\\/td><td>(.*?)<\\/td>$/m) + ' GMT-0000'),\r\n                last_activity: new Date(firstMatch(/^\\t\\t<td>Last Activity:<\\/td><td>(.*?)<\\/td>$/m) + ' GMT-0000'),\r\n                credit_until: new Date(firstMatch(/^\\t\\t<td>Credit Until:<\\/td><td>(.*?)<\\/td>$/m) + ' GMT-0000'),\r\n                link: firstMatch(/^\\t<tr><td>Link:<\\/td><td><a href=\"(.*?)\">\\1<\\/a>/m),\r\n                pvp: !!firstMatch(/^\\$\\('#pvp'\\)\\./m),\r\n                privacy,\r\n                password: firstMatch(/^\\t\\t<td>Password:<\\/td><td>(Yes|No)<\\/td><\\/tr>$/m) == 'Yes',\r\n                size: firstMatch(/^\\t\\t<td>Size:<\\/td><td>(.*?)<\\/td>$/m),\r\n                whitelist: firstMatch(/<td>Whitelist:<\\/td><td>(Yes|No)<\\/td>/m) == 'Yes',\r\n                online,\r\n                status: firstMatch(/^updateWorld\\({id: \\d+, worldStatus: '(.*?)'/m)\r\n            };\r\n        });\r\n        /** @inheritdoc */\r\n        this.getLogs = () => {\r\n            return requestPage(`/worlds/logs/${this.info.id}`)\r\n                .then(log => log.split('\\n'))\r\n                .then(lines => this.parser.parse(lines));\r\n        };\r\n        /** @inheritdoc */\r\n        this.getMessages = (lastId = 0) => {\r\n            return requestJSON('/api', {\r\n                method: 'POST',\r\n                body: `command=getchat&worldId=${this.info.id}&firstId=${lastId}`\r\n            })\r\n                .then(({ status, log, nextId }) => {\r\n                if (status != 'ok')\r\n                    return { log: [], nextId: 0 }; // Reset, world likely offline.\r\n                return { nextId, log };\r\n            }, () => ({ log: [], nextId: lastId })); //Network error, don't reset nextId\r\n        };\r\n        /** @inheritdoc */\r\n        this.getStatus = () => {\r\n            return requestJSON('/api', {\r\n                method: 'POST',\r\n                body: `command=status&worldId=${this.info.id}`\r\n            }).then(response => response.worldStatus);\r\n        };\r\n        /** @inheritdoc */\r\n        this.send = (message) => {\r\n            return requestJSON('/api', {\r\n                method: 'POST',\r\n                body: `command=send&worldId=${this.info.id}&message=${encodeURIComponent(message)}`\r\n            }).then(result => {\r\n                if (result.status == 'ok')\r\n                    return;\r\n                throw new Error(`Unable to send ${message}`);\r\n            });\r\n        };\r\n        /** @inheritdoc */\r\n        this.start = () => {\r\n            return requestJSON('/api', {\r\n                method: 'POST',\r\n                body: `command=start&worldId=${this.info.id}`\r\n            })\r\n                .then(() => undefined, console.error);\r\n        };\r\n        /** @inheritdoc */\r\n        this.stop = () => {\r\n            return requestJSON('/api', {\r\n                method: 'POST',\r\n                body: `command=stop&worldId=${this.info.id}`\r\n            })\r\n                .then(() => undefined, console.error);\r\n        };\r\n        /** @inheritdoc */\r\n        this.restart = () => {\r\n            return requestJSON('/api', {\r\n                method: 'POST',\r\n                body: `command=reboot&worldId=${this.info.id}`\r\n            })\r\n                .then(() => undefined, console.error);\r\n        };\r\n    }\r\n    /** @inheritdoc */\r\n    get name() {\r\n        return this.info.name;\r\n    }\r\n    /** @inheritdoc */\r\n    get id() {\r\n        return this.info.id;\r\n    }\r\n}\n\nexport { setFetch, login, getWorlds, Api };\n","import { MessageBot } from '@bhmb/bot';\n\nvar page = \"<header class=\\\"header is-fixed-top\\\">\\r\\n    <nav class=\\\"navbar is-primary\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\">\\r\\n        <div class=\\\"navbar-brand\\\">\\r\\n            <div class=\\\"navbar-item nav-slider-toggle\\\">\\r\\n                <img src=\\\"https://gitcdn.xyz/cdn/Blockheads-Messagebot/UI/master/logo.png\\\">\\r\\n            </div>\\r\\n            <a class=\\\"navbar-item nav-slider-toggle\\\">Menu</a>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n\\r\\n<div class=\\\"nav-slider-container\\\">\\r\\n    <nav class=\\\"nav-slider\\\"></nav>\\r\\n    <div class=\\\"is-overlay nav-slider-toggle\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"container\\\" class=\\\"has-fixed-nav\\\"></div>\\r\\n\\r\\n\\r\\n<div id=\\\"modal\\\" class=\\\"modal\\\">\\r\\n    <div class=\\\"modal-background\\\"></div>\\r\\n    <div class=\\\"modal-card\\\">\\r\\n        <header class=\\\"modal-card-head\\\"></header>\\r\\n        <section class=\\\"modal-card-body\\\"></section>\\r\\n        <footer class=\\\"modal-card-foot\\\"></footer>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n\nfunction api () {\r\n    const menuSlider = document.querySelector('.nav-slider-container .nav-slider');\r\n    const toggleMenu = () => menuSlider.classList.toggle('is-active');\r\n    for (let el of document.querySelectorAll('.nav-slider-toggle')) {\r\n        el.addEventListener('click', toggleMenu);\r\n    }\r\n    const tabs = new Map();\r\n    const groups = new Map();\r\n    const container = document.getElementById('container');\r\n    const menuContainer = document.querySelector('.nav-slider');\r\n    menuContainer.addEventListener('click', event => {\r\n        let nav = event.target;\r\n        let tab = tabs.get(nav);\r\n        if (tab) {\r\n            // Containers\r\n            Array.from(container.children).forEach(child => child.classList.remove('visible'));\r\n            tab.classList.add('visible');\r\n            // Nav items\r\n            Array.from(menuContainer.querySelectorAll('span.nav-item')).forEach(span => span.classList.remove('is-active'));\r\n            nav.classList.add('is-active');\r\n        }\r\n    });\r\n    const addTab = (text, groupName) => {\r\n        let div = container.appendChild(document.createElement('div'));\r\n        let parent = menuContainer;\r\n        if (groupName)\r\n            parent = groups.get(groupName);\r\n        let nav = parent.appendChild(document.createElement('span'));\r\n        nav.textContent = text;\r\n        nav.classList.add('nav-item');\r\n        tabs.set(nav, div);\r\n        return div;\r\n    };\r\n    const removeTab = (content) => {\r\n        for (let [nav, div] of tabs.entries()) {\r\n            if (div == content) {\r\n                div.remove();\r\n                nav.remove();\r\n                tabs.delete(nav);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    const addTabGroup = (text, groupName, parent) => {\r\n        let details = groups.get(groupName);\r\n        if (details) {\r\n            details.children[0].textContent = text;\r\n            return;\r\n        }\r\n        let parentElement = menuContainer;\r\n        if (parent)\r\n            parentElement = groups.get(parent);\r\n        details = parentElement.appendChild(document.createElement('details'));\r\n        details.classList.add('nav-item');\r\n        let summary = details.appendChild(document.createElement('summary'));\r\n        summary.textContent = text;\r\n        groups.set(groupName, details);\r\n    };\r\n    const removeTabGroup = (groupName) => {\r\n        let group = groups.get(groupName);\r\n        if (!group)\r\n            return;\r\n        for (let child of group.querySelectorAll('span')) {\r\n            // Unless someone has been purposely messing with the page, this is a safe assertion\r\n            removeTab(tabs.get(child));\r\n        }\r\n        groups.delete(groupName);\r\n        group.remove();\r\n    };\r\n    const handleRule = (rule, element) => {\r\n        if (typeof rule.text == 'string') {\r\n            element.textContent = rule.text;\r\n        }\r\n        else if (typeof rule.html == 'string') {\r\n            element.innerHTML = rule.html;\r\n        }\r\n        let blacklist = ['text', 'html', 'selector'];\r\n        if (element instanceof HTMLTextAreaElement && 'value' in rule) {\r\n            element.textContent = rule.value;\r\n            blacklist.push('value');\r\n        }\r\n        //See https://github.com/Blockheads-Messagebot/MessageBot/issues/52\r\n        if (element instanceof HTMLSelectElement && 'value' in rule) {\r\n            let child = element.querySelector(`[value=\"${rule.value}\"]`);\r\n            if (child)\r\n                child.selected = true;\r\n        }\r\n        Object.keys(rule)\r\n            .filter(key => !blacklist.includes(key))\r\n            .forEach(key => element.setAttribute(key, rule[key]));\r\n    };\r\n    const buildTemplate = (template, target, rules) => {\r\n        if (typeof template == 'string')\r\n            template = document.querySelector(template);\r\n        if (typeof target == 'string')\r\n            target = document.querySelector(target);\r\n        let parent = document.importNode(template.content, true);\r\n        for (let rule of rules) {\r\n            let element = parent.querySelector(rule.selector);\r\n            if (!element) {\r\n                console.warn(`Could not find ${rule.selector}`, rule);\r\n                continue;\r\n            }\r\n            handleRule(rule, element);\r\n        }\r\n        target.appendChild(parent);\r\n    };\r\n    const notify = (text, displayTime = 3) => {\r\n        let el = document.body.appendChild(document.createElement('div'));\r\n        el.classList.add('bot-notification', 'is-active');\r\n        el.textContent = text;\r\n        let timeouts = [\r\n            setTimeout(() => el.classList.remove('is-active'), displayTime * 1000),\r\n            setTimeout(() => el.remove(), (displayTime + 1) * 1000)\r\n        ];\r\n        el.addEventListener('click', () => {\r\n            timeouts.forEach(clearTimeout);\r\n            el.remove();\r\n        });\r\n    };\r\n    let alertInstance = {\r\n        active: false,\r\n        queue: []\r\n    };\r\n    const modal = document.getElementById('modal');\r\n    const modalBody = modal.querySelector('.modal-card-body');\r\n    const modalFooter = modal.querySelector('.modal-card-foot');\r\n    const addButton = (button) => {\r\n        let el = modalFooter.appendChild(document.createElement('a'));\r\n        let styles = ['button'];\r\n        if (typeof button == 'object') {\r\n            if (button.style)\r\n                styles.push(button.style);\r\n            el.textContent = button.text;\r\n        }\r\n        else {\r\n            el.textContent = button;\r\n        }\r\n        el.classList.add(...styles);\r\n    };\r\n    const showAlert = () => {\r\n        alertInstance.active = true;\r\n        const { html, buttons, callback } = alertInstance.queue.shift();\r\n        modalBody.innerHTML = html;\r\n        Array.isArray(buttons) ? buttons.forEach(addButton) : addButton('OK');\r\n        modal.classList.add('is-active');\r\n        modalFooter.addEventListener('click', function buttonHandler(event) {\r\n            let target = event.target;\r\n            if (target.tagName != 'A')\r\n                return;\r\n            modal.classList.remove('is-active');\r\n            try {\r\n                if (callback)\r\n                    callback.call(null, target.textContent);\r\n            }\r\n            catch (err) {\r\n                console.error('Error calling alert callback', err);\r\n            }\r\n            modalFooter.innerHTML = '';\r\n            modalFooter.removeEventListener('click', buttonHandler);\r\n            alertInstance.active = false;\r\n            if (alertInstance.queue.length)\r\n                showAlert();\r\n        });\r\n    };\r\n    const alert = (html, buttons, callback) => {\r\n        alertInstance.queue.push({ html, buttons, callback });\r\n        if (!alertInstance.active)\r\n            showAlert();\r\n    };\r\n    const prompt = (text, callback) => {\r\n        let p = document.createElement('p');\r\n        p.textContent = text;\r\n        alert(p.outerHTML + `<textarea class=\"textarea\"></textarea>`, ['OK', 'Cancel'], () => {\r\n            let el = modalBody.querySelector('textarea');\r\n            if (callback)\r\n                callback(el.value || '');\r\n        });\r\n    };\r\n    return {\r\n        toggleMenu,\r\n        addTab,\r\n        removeTab,\r\n        addTabGroup,\r\n        removeTabGroup,\r\n        buildTemplate,\r\n        notify,\r\n        alert,\r\n        prompt\r\n    };\r\n}\n\nfunction polyfill() {\r\n    if (!('open' in document.createElement('details'))) {\r\n        let style = document.createElement('style');\r\n        style.textContent += `details:not([open]) > :not(summary) { display: none !important } details > summary:before { content: \"▶\" display: inline-block font-size: .8em width: 1.5em font-family:\"Courier New\" } details[open] > summary:before { transform: rotate(90deg) }`;\r\n        document.head.appendChild(style);\r\n        window.addEventListener('click', function (event) {\r\n            let target = event.target;\r\n            if (target.tagName == 'SUMMARY') {\r\n                let details = target.parentNode;\r\n                if (!details) {\r\n                    return;\r\n                }\r\n                if (details.getAttribute('open')) {\r\n                    details.open = false;\r\n                    details.removeAttribute('open');\r\n                }\r\n                else {\r\n                    details.open = true;\r\n                    details.setAttribute('open', 'open');\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\n\nMessageBot.registerExtension('ui', function (ex) {\r\n    if (typeof document == 'undefined') {\r\n        throw new Error('This extension cannot be loaded outside of a browser environment.');\r\n    }\r\n    ex.uninstall = function () {\r\n        throw new Error('The UI extension cannot be removed once loaded');\r\n    };\r\n    // Page creation\r\n    document.body.innerHTML = page;\r\n    document.head.querySelectorAll('link').forEach(el => el.remove());\r\n    let style = document.head.appendChild(document.createElement('link'));\r\n    style.rel = 'stylesheet';\r\n    style.href = 'https://gitcdn.xyz/cdn/Blockheads-Messagebot/UI/master/index.css';\r\n    polyfill();\r\n    // Expose api\r\n    ex.exports = api();\r\n});\n","import { MessageBot } from '@bhmb/bot';\n\nfunction checkJoins(player, message) {\r\n    return player.joins >= message.joins_low && player.joins <= message.joins_high;\r\n}\r\nfunction checkGroups(player, message) {\r\n    return isInGroup(player, message.group) && !isInGroup(player, message.not_group);\r\n}\r\nfunction isInGroup(player, group) {\r\n    switch (group) {\r\n        case 'all':\r\n            return true;\r\n        case 'staff':\r\n            return player.isStaff;\r\n        case 'mod':\r\n            return player.isMod;\r\n        case 'admin':\r\n            return player.isAdmin;\r\n        case 'owner':\r\n            return player.isOwner;\r\n        default:\r\n            return false;\r\n    }\r\n}\n\nclass RemovableMessageHelper {\r\n    constructor(id, ex) {\r\n        this.id = id;\r\n        this.ex = ex;\r\n    }\r\n    get messages() {\r\n        return this.ex.storage.get(this.id, []);\r\n    }\r\n}\r\nclass JoinListener extends RemovableMessageHelper {\r\n    constructor(ex) {\r\n        super('joinArr', ex);\r\n        this.listener = (player) => {\r\n            for (let msg of this.messages) {\r\n                if (checkJoins(player, msg) && checkGroups(player, msg)) {\r\n                    this.ex.bot.send(msg.message, { name: player.name });\r\n                }\r\n            }\r\n        };\r\n        this.ex.world.onJoin.sub(this.listener);\r\n    }\r\n    remove() {\r\n        this.ex.world.onJoin.unsub(this.listener);\r\n    }\r\n}\r\nclass LeaveListener extends RemovableMessageHelper {\r\n    constructor(ex) {\r\n        super('leaveArr', ex);\r\n        this.listener = (player) => {\r\n            for (let msg of this.messages) {\r\n                if (checkJoins(player, msg) && checkGroups(player, msg)) {\r\n                    this.ex.bot.send(msg.message, { name: player.name });\r\n                }\r\n            }\r\n        };\r\n        this.ex.world.onLeave.sub(this.listener);\r\n    }\r\n    remove() {\r\n        this.ex.world.onLeave.unsub(this.listener);\r\n    }\r\n}\r\nclass TriggerListener extends RemovableMessageHelper {\r\n    constructor(ex) {\r\n        super('triggerArr', ex);\r\n        this.listener = ({ player, message }) => {\r\n            if (player.name == 'SERVER')\r\n                return;\r\n            let responses = 0;\r\n            for (let msg of this.messages) {\r\n                let checks = [\r\n                    checkJoins(player, msg),\r\n                    checkGroups(player, msg),\r\n                    this.triggerMatches(message, msg.trigger)\r\n                ];\r\n                if (checks.every(Boolean) && ++responses <= this.ex.storage.get('maxResponses', 3)) {\r\n                    this.ex.bot.send(msg.message, { name: player.name });\r\n                }\r\n            }\r\n        };\r\n        this.ex.world.onMessage.sub(this.listener);\r\n    }\r\n    remove() {\r\n        this.ex.world.onMessage.unsub(this.listener);\r\n    }\r\n    triggerMatches(message, trigger) {\r\n        if (!this.ex.storage.get('disableWhitespaceTrimming', false)) {\r\n            trigger = trigger.trim();\r\n        }\r\n        if (this.ex.storage.get('regexTriggers', false)) {\r\n            try {\r\n                return new RegExp(trigger, 'i').test(message);\r\n            }\r\n            catch (_a) {\r\n                return false;\r\n            }\r\n        }\r\n        trigger = trigger.replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\").replace(/\\*/g, \".*\");\r\n        return new RegExp(trigger, 'i').test(message);\r\n    }\r\n}\r\nclass AnnouncementListener extends RemovableMessageHelper {\r\n    constructor(ex) {\r\n        super('announcementArr', ex);\r\n        this.index = 0;\r\n        this.run = () => {\r\n            if (this.index >= this.messages.length)\r\n                this.index = 0;\r\n            if (!this.ex.world.online.length) {\r\n                this.index = 0;\r\n            }\r\n            else {\r\n                const data = this.messages[this.index];\r\n                if (data && data.message)\r\n                    this.ex.bot.send(data.message);\r\n            }\r\n            this.timeoutId = setTimeout(this.run, this.delay);\r\n        };\r\n        this.timeoutId = setTimeout(this.run, this.delay);\r\n    }\r\n    get delay() {\r\n        return this.ex.storage.get('announcementDelay', 10) * 60000;\r\n    }\r\n    remove() {\r\n        // This will also work with Timer, but Typescript doesn't know that.\r\n        clearTimeout(this.timeoutId);\r\n    }\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar atoa = function atoa (a, n) { return Array.prototype.slice.call(a, n); };\n\nvar si = typeof setImmediate === 'function', tick;\nif (si) {\n  tick = function (fn) { setImmediate(fn); };\n} else if (typeof process !== 'undefined' && process.nextTick) {\n  tick = process.nextTick;\n} else {\n  tick = function (fn) { setTimeout(fn, 0); };\n}\n\nvar ticky = tick;\n\nvar debounce = function debounce (fn, args, ctx) {\n  if (!fn) { return; }\n  ticky(function run () {\n    fn.apply(ctx || null, args || []);\n  });\n};\n\nvar emitter = function emitter (thing, options) {\n  var opts = options || {};\n  var evt = {};\n  if (thing === undefined) { thing = {}; }\n  thing.on = function (type, fn) {\n    if (!evt[type]) {\n      evt[type] = [fn];\n    } else {\n      evt[type].push(fn);\n    }\n    return thing;\n  };\n  thing.once = function (type, fn) {\n    fn._once = true; // thing.off(fn) still works!\n    thing.on(type, fn);\n    return thing;\n  };\n  thing.off = function (type, fn) {\n    var c = arguments.length;\n    if (c === 1) {\n      delete evt[type];\n    } else if (c === 0) {\n      evt = {};\n    } else {\n      var et = evt[type];\n      if (!et) { return thing; }\n      et.splice(et.indexOf(fn), 1);\n    }\n    return thing;\n  };\n  thing.emit = function () {\n    var args = atoa(arguments);\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\n  };\n  thing.emitterSnapshot = function (type) {\n    var et = (evt[type] || []).slice(0);\n    return function () {\n      var args = atoa(arguments);\n      var ctx = this || thing;\n      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\n      et.forEach(function emitter (listen) {\n        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\n        if (listen._once) { thing.off(type, listen); }\n      });\n      return thing;\n    };\n  };\n  return thing;\n};\n\nvar NativeCustomEvent = commonjsGlobal.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nvar customEvent = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n};\n\nvar eventmap = [];\nvar eventname = '';\nvar ron = /^on/;\n\nfor (eventname in commonjsGlobal) {\n  if (ron.test(eventname)) {\n    eventmap.push(eventname.slice(2));\n  }\n}\n\nvar eventmap_1 = eventmap;\n\nvar doc = commonjsGlobal.document;\nvar addEvent = addEventEasy;\nvar removeEvent = removeEventEasy;\nvar hardCache = [];\n\nif (!commonjsGlobal.addEventListener) {\n  addEvent = addEventHard;\n  removeEvent = removeEventHard;\n}\n\nvar crossvent = {\n  add: addEvent,\n  remove: removeEvent,\n  fabricate: fabricateEvent\n};\n\nfunction addEventEasy (el, type, fn, capturing) {\n  return el.addEventListener(type, fn, capturing);\n}\n\nfunction addEventHard (el, type, fn) {\n  return el.attachEvent('on' + type, wrap(el, type, fn));\n}\n\nfunction removeEventEasy (el, type, fn, capturing) {\n  return el.removeEventListener(type, fn, capturing);\n}\n\nfunction removeEventHard (el, type, fn) {\n  var listener = unwrap(el, type, fn);\n  if (listener) {\n    return el.detachEvent('on' + type, listener);\n  }\n}\n\nfunction fabricateEvent (el, type, model) {\n  var e = eventmap_1.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\n  if (el.dispatchEvent) {\n    el.dispatchEvent(e);\n  } else {\n    el.fireEvent('on' + type, e);\n  }\n  function makeClassicEvent () {\n    var e;\n    if (doc.createEvent) {\n      e = doc.createEvent('Event');\n      e.initEvent(type, true, true);\n    } else if (doc.createEventObject) {\n      e = doc.createEventObject();\n    }\n    return e;\n  }\n  function makeCustomEvent () {\n    return new customEvent(type, { detail: model });\n  }\n}\n\nfunction wrapperFactory (el, type, fn) {\n  return function wrapper (originalEvent) {\n    var e = originalEvent || commonjsGlobal.event;\n    e.target = e.target || e.srcElement;\n    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };\n    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };\n    e.which = e.which || e.keyCode;\n    fn.call(el, e);\n  };\n}\n\nfunction wrap (el, type, fn) {\n  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\n  hardCache.push({\n    wrapper: wrapper,\n    element: el,\n    type: type,\n    fn: fn\n  });\n  return wrapper;\n}\n\nfunction unwrap (el, type, fn) {\n  var i = find(el, type, fn);\n  if (i) {\n    var wrapper = hardCache[i].wrapper;\n    hardCache.splice(i, 1); // free up a tad of memory\n    return wrapper;\n  }\n}\n\nfunction find (el, type, fn) {\n  var i, item;\n  for (i = 0; i < hardCache.length; i++) {\n    item = hardCache[i];\n    if (item.element === el && item.type === type && item.fn === fn) {\n      return i;\n    }\n  }\n}\n\nvar cache = {};\nvar start = '(?:^|\\\\s)';\nvar end = '(?:\\\\s|$)';\n\nfunction lookupClass (className) {\n  var cached = cache[className];\n  if (cached) {\n    cached.lastIndex = 0;\n  } else {\n    cache[className] = cached = new RegExp(start + className + end, 'g');\n  }\n  return cached;\n}\n\nfunction addClass (el, className) {\n  var current = el.className;\n  if (!current.length) {\n    el.className = className;\n  } else if (!lookupClass(className).test(current)) {\n    el.className += ' ' + className;\n  }\n}\n\nfunction rmClass (el, className) {\n  el.className = el.className.replace(lookupClass(className), ' ').trim();\n}\n\nvar classes = {\n  add: addClass,\n  rm: rmClass\n};\n\nvar doc$1 = document;\nvar documentElement = doc$1.documentElement;\n\nfunction dragula (initialContainers, options) {\n  var len = arguments.length;\n  if (len === 1 && Array.isArray(initialContainers) === false) {\n    options = initialContainers;\n    initialContainers = [];\n  }\n  var _mirror; // mirror image\n  var _source; // source container\n  var _item; // item being dragged\n  var _offsetX; // reference x\n  var _offsetY; // reference y\n  var _moveX; // reference move x\n  var _moveY; // reference move y\n  var _initialSibling; // reference sibling when grabbed\n  var _currentSibling; // reference sibling now\n  var _copy; // item used for copying\n  var _renderTimer; // timer for setTimeout renderMirrorImage\n  var _lastDropTarget = null; // last container item was over\n  var _grabbed; // holds mousedown context until first mousemove\n\n  var o = options || {};\n  if (o.moves === void 0) { o.moves = always; }\n  if (o.accepts === void 0) { o.accepts = always; }\n  if (o.invalid === void 0) { o.invalid = invalidTarget; }\n  if (o.containers === void 0) { o.containers = initialContainers || []; }\n  if (o.isContainer === void 0) { o.isContainer = never; }\n  if (o.copy === void 0) { o.copy = false; }\n  if (o.copySortSource === void 0) { o.copySortSource = false; }\n  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\n  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\n  if (o.direction === void 0) { o.direction = 'vertical'; }\n  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\n  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc$1.body; }\n\n  var drake = emitter({\n    containers: o.containers,\n    start: manualStart,\n    end: end,\n    cancel: cancel,\n    remove: remove,\n    destroy: destroy,\n    canMove: canMove,\n    dragging: false\n  });\n\n  if (o.removeOnSpill === true) {\n    drake.on('over', spillOver).on('out', spillOut);\n  }\n\n  events();\n\n  return drake;\n\n  function isContainer (el) {\n    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\n  }\n\n  function events (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousedown', grab);\n    touchy(documentElement, op, 'mouseup', release);\n  }\n\n  function eventualMovements (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\n  }\n\n  function movements (remove) {\n    var op = remove ? 'remove' : 'add';\n    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\n    crossvent[op](documentElement, 'click', preventGrabbed);\n  }\n\n  function destroy () {\n    events(true);\n    release({});\n  }\n\n  function preventGrabbed (e) {\n    if (_grabbed) {\n      e.preventDefault();\n    }\n  }\n\n  function grab (e) {\n    _moveX = e.clientX;\n    _moveY = e.clientY;\n\n    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\n    if (ignore) {\n      return; // we only care about honest-to-god left clicks and touch events\n    }\n    var item = e.target;\n    var context = canStart(item);\n    if (!context) {\n      return;\n    }\n    _grabbed = context;\n    eventualMovements();\n    if (e.type === 'mousedown') {\n      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n      } else {\n        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n      }\n    }\n  }\n\n  function startBecauseMouseMoved (e) {\n    if (!_grabbed) {\n      return;\n    }\n    if (whichMouseButton(e) === 0) {\n      release({});\n      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n    }\n    // truthy check fixes #239, equality fixes #207\n    if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\n      return;\n    }\n    if (o.ignoreInputTextSelection) {\n      var clientX = getCoord('clientX', e);\n      var clientY = getCoord('clientY', e);\n      var elementBehindCursor = doc$1.elementFromPoint(clientX, clientY);\n      if (isInput(elementBehindCursor)) {\n        return;\n      }\n    }\n\n    var grabbed = _grabbed; // call to end() unsets _grabbed\n    eventualMovements(true);\n    movements();\n    end();\n    start(grabbed);\n\n    var offset = getOffset(_item);\n    _offsetX = getCoord('pageX', e) - offset.left;\n    _offsetY = getCoord('pageY', e) - offset.top;\n\n    classes.add(_copy || _item, 'gu-transit');\n    renderMirrorImage();\n    drag(e);\n  }\n\n  function canStart (item) {\n    if (drake.dragging && _mirror) {\n      return;\n    }\n    if (isContainer(item)) {\n      return; // don't drag container itself\n    }\n    var handle = item;\n    while (getParent(item) && isContainer(getParent(item)) === false) {\n      if (o.invalid(item, handle)) {\n        return;\n      }\n      item = getParent(item); // drag target should be a top element\n      if (!item) {\n        return;\n      }\n    }\n    var source = getParent(item);\n    if (!source) {\n      return;\n    }\n    if (o.invalid(item, handle)) {\n      return;\n    }\n\n    var movable = o.moves(item, source, handle, nextEl(item));\n    if (!movable) {\n      return;\n    }\n\n    return {\n      item: item,\n      source: source\n    };\n  }\n\n  function canMove (item) {\n    return !!canStart(item);\n  }\n\n  function manualStart (item) {\n    var context = canStart(item);\n    if (context) {\n      start(context);\n    }\n  }\n\n  function start (context) {\n    if (isCopy(context.item, context.source)) {\n      _copy = context.item.cloneNode(true);\n      drake.emit('cloned', _copy, context.item, 'copy');\n    }\n\n    _source = context.source;\n    _item = context.item;\n    _initialSibling = _currentSibling = nextEl(context.item);\n\n    drake.dragging = true;\n    drake.emit('drag', _item, _source);\n  }\n\n  function invalidTarget () {\n    return false;\n  }\n\n  function end () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    drop(item, getParent(item));\n  }\n\n  function ungrab () {\n    _grabbed = false;\n    eventualMovements(true);\n    movements(true);\n  }\n\n  function release (e) {\n    ungrab();\n\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var clientX = getCoord('clientX', e);\n    var clientY = getCoord('clientY', e);\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\n      drop(item, dropTarget);\n    } else if (o.removeOnSpill) {\n      remove();\n    } else {\n      cancel();\n    }\n  }\n\n  function drop (item, target) {\n    var parent = getParent(item);\n    if (_copy && o.copySortSource && target === _source) {\n      parent.removeChild(_item);\n    }\n    if (isInitialPlacement(target)) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, target, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function remove () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var parent = getParent(item);\n    if (parent) {\n      parent.removeChild(item);\n    }\n    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\n    cleanup();\n  }\n\n  function cancel (revert) {\n    if (!drake.dragging) {\n      return;\n    }\n    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\n    var item = _copy || _item;\n    var parent = getParent(item);\n    var initial = isInitialPlacement(parent);\n    if (initial === false && reverts) {\n      if (_copy) {\n        if (parent) {\n          parent.removeChild(_copy);\n        }\n      } else {\n        _source.insertBefore(item, _initialSibling);\n      }\n    }\n    if (initial || reverts) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, parent, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function cleanup () {\n    var item = _copy || _item;\n    ungrab();\n    removeMirrorImage();\n    if (item) {\n      classes.rm(item, 'gu-transit');\n    }\n    if (_renderTimer) {\n      clearTimeout(_renderTimer);\n    }\n    drake.dragging = false;\n    if (_lastDropTarget) {\n      drake.emit('out', item, _lastDropTarget, _source);\n    }\n    drake.emit('dragend', item);\n    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\n  }\n\n  function isInitialPlacement (target, s) {\n    var sibling;\n    if (s !== void 0) {\n      sibling = s;\n    } else if (_mirror) {\n      sibling = _currentSibling;\n    } else {\n      sibling = nextEl(_copy || _item);\n    }\n    return target === _source && sibling === _initialSibling;\n  }\n\n  function findDropTarget (elementBehindCursor, clientX, clientY) {\n    var target = elementBehindCursor;\n    while (target && !accepted()) {\n      target = getParent(target);\n    }\n    return target;\n\n    function accepted () {\n      var droppable = isContainer(target);\n      if (droppable === false) {\n        return false;\n      }\n\n      var immediate = getImmediateChild(target, elementBehindCursor);\n      var reference = getReference(target, immediate, clientX, clientY);\n      var initial = isInitialPlacement(target, reference);\n      if (initial) {\n        return true; // should always be able to drop it right back where it was\n      }\n      return o.accepts(_item, target, _source, reference);\n    }\n  }\n\n  function drag (e) {\n    if (!_mirror) {\n      return;\n    }\n    e.preventDefault();\n\n    var clientX = getCoord('clientX', e);\n    var clientY = getCoord('clientY', e);\n    var x = clientX - _offsetX;\n    var y = clientY - _offsetY;\n\n    _mirror.style.left = x + 'px';\n    _mirror.style.top = y + 'px';\n\n    var item = _copy || _item;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\n    if (changed || dropTarget === null) {\n      out();\n      _lastDropTarget = dropTarget;\n      over();\n    }\n    var parent = getParent(item);\n    if (dropTarget === _source && _copy && !o.copySortSource) {\n      if (parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    var reference;\n    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\n    if (immediate !== null) {\n      reference = getReference(dropTarget, immediate, clientX, clientY);\n    } else if (o.revertOnSpill === true && !_copy) {\n      reference = _initialSibling;\n      dropTarget = _source;\n    } else {\n      if (_copy && parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    if (\n      (reference === null && changed) ||\n      reference !== item &&\n      reference !== nextEl(item)\n    ) {\n      _currentSibling = reference;\n      dropTarget.insertBefore(item, reference);\n      drake.emit('shadow', item, dropTarget, _source);\n    }\n    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\n    function over () { if (changed) { moved('over'); } }\n    function out () { if (_lastDropTarget) { moved('out'); } }\n  }\n\n  function spillOver (el) {\n    classes.rm(el, 'gu-hide');\n  }\n\n  function spillOut (el) {\n    if (drake.dragging) { classes.add(el, 'gu-hide'); }\n  }\n\n  function renderMirrorImage () {\n    if (_mirror) {\n      return;\n    }\n    var rect = _item.getBoundingClientRect();\n    _mirror = _item.cloneNode(true);\n    _mirror.style.width = getRectWidth(rect) + 'px';\n    _mirror.style.height = getRectHeight(rect) + 'px';\n    classes.rm(_mirror, 'gu-transit');\n    classes.add(_mirror, 'gu-mirror');\n    o.mirrorContainer.appendChild(_mirror);\n    touchy(documentElement, 'add', 'mousemove', drag);\n    classes.add(o.mirrorContainer, 'gu-unselectable');\n    drake.emit('cloned', _mirror, _item, 'mirror');\n  }\n\n  function removeMirrorImage () {\n    if (_mirror) {\n      classes.rm(o.mirrorContainer, 'gu-unselectable');\n      touchy(documentElement, 'remove', 'mousemove', drag);\n      getParent(_mirror).removeChild(_mirror);\n      _mirror = null;\n    }\n  }\n\n  function getImmediateChild (dropTarget, target) {\n    var immediate = target;\n    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n      immediate = getParent(immediate);\n    }\n    if (immediate === documentElement) {\n      return null;\n    }\n    return immediate;\n  }\n\n  function getReference (dropTarget, target, x, y) {\n    var horizontal = o.direction === 'horizontal';\n    var reference = target !== dropTarget ? inside() : outside();\n    return reference;\n\n    function outside () { // slower, but able to figure out any position\n      var len = dropTarget.children.length;\n      var i;\n      var el;\n      var rect;\n      for (i = 0; i < len; i++) {\n        el = dropTarget.children[i];\n        rect = el.getBoundingClientRect();\n        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\n        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\n      }\n      return null;\n    }\n\n    function inside () { // faster, but only available if dropped inside a child element\n      var rect = target.getBoundingClientRect();\n      if (horizontal) {\n        return resolve(x > rect.left + getRectWidth(rect) / 2);\n      }\n      return resolve(y > rect.top + getRectHeight(rect) / 2);\n    }\n\n    function resolve (after) {\n      return after ? nextEl(target) : target;\n    }\n  }\n\n  function isCopy (item, container) {\n    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n  }\n}\n\nfunction touchy (el, op, type, fn) {\n  var touch = {\n    mouseup: 'touchend',\n    mousedown: 'touchstart',\n    mousemove: 'touchmove'\n  };\n  var pointers = {\n    mouseup: 'pointerup',\n    mousedown: 'pointerdown',\n    mousemove: 'pointermove'\n  };\n  var microsoft = {\n    mouseup: 'MSPointerUp',\n    mousedown: 'MSPointerDown',\n    mousemove: 'MSPointerMove'\n  };\n  if (commonjsGlobal.navigator.pointerEnabled) {\n    crossvent[op](el, pointers[type], fn);\n  } else if (commonjsGlobal.navigator.msPointerEnabled) {\n    crossvent[op](el, microsoft[type], fn);\n  } else {\n    crossvent[op](el, touch[type], fn);\n    crossvent[op](el, type, fn);\n  }\n}\n\nfunction whichMouseButton (e) {\n  if (e.touches !== void 0) { return e.touches.length; }\n  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\n  if (e.buttons !== void 0) { return e.buttons; }\n  var button = e.button;\n  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n  }\n}\n\nfunction getOffset (el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\n    top: rect.top + getScroll('scrollTop', 'pageYOffset')\n  };\n}\n\nfunction getScroll (scrollProp, offsetProp) {\n  if (typeof commonjsGlobal[offsetProp] !== 'undefined') {\n    return commonjsGlobal[offsetProp];\n  }\n  if (documentElement.clientHeight) {\n    return documentElement[scrollProp];\n  }\n  return doc$1.body[scrollProp];\n}\n\nfunction getElementBehindPoint (point, x, y) {\n  var p = point || {};\n  var state = p.className;\n  var el;\n  p.className += ' gu-hide';\n  el = doc$1.elementFromPoint(x, y);\n  p.className = state;\n  return el;\n}\n\nfunction never () { return false; }\nfunction always () { return true; }\nfunction getRectWidth (rect) { return rect.width || (rect.right - rect.left); }\nfunction getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }\nfunction getParent (el) { return el.parentNode === doc$1 ? null : el.parentNode; }\nfunction isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }\nfunction isEditable (el) {\n  if (!el) { return false; } // no parents were editable\n  if (el.contentEditable === 'false') { return false; } // stop the lookup\n  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n}\n\nfunction nextEl (el) {\n  return el.nextElementSibling || manually();\n  function manually () {\n    var sibling = el;\n    do {\n      sibling = sibling.nextSibling;\n    } while (sibling && sibling.nodeType !== 1);\n    return sibling;\n  }\n}\n\nfunction getEventHost (e) {\n  // on touchend event, we have to use `e.changedTouches`\n  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n  // see https://github.com/bevacqua/dragula/issues/34\n  if (e.targetTouches && e.targetTouches.length) {\n    return e.targetTouches[0];\n  }\n  if (e.changedTouches && e.changedTouches.length) {\n    return e.changedTouches[0];\n  }\n  return e;\n}\n\nfunction getCoord (coord, e) {\n  var host = getEventHost(e);\n  var missMap = {\n    pageX: 'clientX', // IE8\n    pageY: 'clientY' // IE8\n  };\n  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n    coord = missMap[coord];\n  }\n  return host[coord];\n}\n\nvar dragula_1 = dragula;\n\nvar joinHtml = \"<template>\\r\\n    <div class=\\\"box\\\">\\r\\n        <div class=\\\"columns\\\">\\r\\n            <div class=\\\"column is-narrow is-hidden-touch\\\">\\r\\n                <span class=\\\"drag\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <p class=\\\"has-text-weight-bold\\\">Message</p>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <textarea class=\\\"textarea is-small is-fluid\\\" data-target=\\\"message\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"column is-3\\\">\\r\\n                <details>\\r\\n                    <summary>More options</summary>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <p class=\\\"has-text-weight-bold\\\">Player is </p>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <select data-target=\\\"group\\\" class=\\\"select is-small\\\">\\r\\n                                <option value=\\\"all\\\">anyone</option>\\r\\n                                <option value=\\\"staff\\\">a staff member</option>\\r\\n                                <option value=\\\"mod\\\">a mod</option>\\r\\n                                <option value=\\\"admin\\\">an admin</option>\\r\\n                                <option value=\\\"owner\\\">the owner</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <p class=\\\"has-text-weight-bold\\\">Player is not </p>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <select data-target=\\\"not_group\\\" class=\\\"select is-small\\\">\\r\\n                                <option value=\\\"nobody\\\">nobody</option>\\r\\n                                <option value=\\\"staff\\\">a staff member</option>\\r\\n                                <option value=\\\"mod\\\">a mod</option>\\r\\n                                <option value=\\\"admin\\\">an admin</option>\\r\\n                                <option value=\\\"owner\\\">the owner</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <input type=\\\"number\\\" class=\\\"input is-small\\\" value=\\\"0\\\" data-target=\\\"joins_low\\\" min=\\\"0\\\">\\r\\n                            <span class=\\\"has-text-weight-bold\\\"> &le; player joins &le; </span>\\r\\n                            <input type=\\\"number\\\" class=\\\"input is-small\\\" value=\\\"9999\\\" data-target=\\\"joins_high\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </details>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <button class=\\\"button is-small is-danger is-outlined\\\" data-do=\\\"delete\\\">Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<div class=\\\"container is-widescreen\\\">\\r\\n    <section class=\\\"section is-small\\\">\\r\\n        <span class=\\\"button is-primary is-adding-message\\\">+</span>\\r\\n        <h3 class=\\\"title is-4\\\">Join Messages</h3>\\r\\n        <ul>\\r\\n            <li>These messages will be checked when a player joins the server.</li>\\r\\n            <li>{{NAME}}, {{Name}}, and {{name}} in the message will be replaced with the user's name.</li>\\r\\n        </ul>\\r\\n    </section>\\r\\n    <div class=\\\"messages-container\\\"></div>\\r\\n</div>\\r\\n\";\n\nvar leaveHtml = \"<template>\\r\\n    <div class=\\\"box\\\">\\r\\n        <div class=\\\"columns\\\">\\r\\n            <div class=\\\"column is-narrow is-hidden-touch\\\">\\r\\n                <span class=\\\"drag\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <p class=\\\"has-text-weight-bold\\\">Message</p>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <textarea class=\\\"textarea is-small is-fluid\\\" data-target=\\\"message\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"column is-3\\\">\\r\\n                <details>\\r\\n                    <summary>More options</summary>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <p class=\\\"has-text-weight-bold\\\">Player is </p>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <select data-target=\\\"group\\\" class=\\\"select is-small\\\">\\r\\n                                <option value=\\\"all\\\">anyone</option>\\r\\n                                <option value=\\\"staff\\\">a staff member</option>\\r\\n                                <option value=\\\"mod\\\">a mod</option>\\r\\n                                <option value=\\\"admin\\\">an admin</option>\\r\\n                                <option value=\\\"owner\\\">the owner</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <p class=\\\"has-text-weight-bold\\\">Player is not </p>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <select data-target=\\\"not_group\\\" class=\\\"select is-small\\\">\\r\\n                                <option value=\\\"nobody\\\">nobody</option>\\r\\n                                <option value=\\\"staff\\\">a staff member</option>\\r\\n                                <option value=\\\"mod\\\">a mod</option>\\r\\n                                <option value=\\\"admin\\\">an admin</option>\\r\\n                                <option value=\\\"owner\\\">the owner</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <input type=\\\"number\\\" class=\\\"input is-small\\\" value=\\\"0\\\" data-target=\\\"joins_low\\\" min=\\\"0\\\">\\r\\n                            <span class=\\\"has-text-weight-bold\\\"> &le; player joins &le; </span>\\r\\n                            <input type=\\\"number\\\" class=\\\"input is-small\\\" value=\\\"9999\\\" data-target=\\\"joins_high\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </details>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <button class=\\\"button is-small is-danger is-outlined\\\" data-do=\\\"delete\\\">Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<div class=\\\"container is-widescreen\\\">\\r\\n    <section class=\\\"section is-small\\\">\\r\\n        <span class=\\\"button is-primary is-adding-message\\\">+</span>\\r\\n        <h3 class=\\\"title is-4\\\">Leave Messages</h3>\\r\\n        <ul>\\r\\n            <li>These messages will be checked when a player leaves the server.</li>\\r\\n            <li>{{NAME}}, {{Name}}, and {{name}} in the message will be replaced with the user's name.</li>\\r\\n        </ul>\\r\\n    </section>\\r\\n    <div class=\\\"messages-container\\\"></div>\\r\\n</div>\\r\\n\";\n\nvar triggerHtml = \"<template>\\r\\n    <div class=\\\"box\\\">\\r\\n        <div class=\\\"columns\\\">\\r\\n            <div class=\\\"column is-narrow is-hidden-touch\\\">\\r\\n                <span class=\\\"drag\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <p class=\\\"has-text-weight-bold\\\">Trigger</p>\\r\\n            </div>\\r\\n            <div class=\\\"column is-2-desktop\\\">\\r\\n                <input class=\\\"input is-small\\\" data-target=\\\"trigger\\\">\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <p class=\\\"has-text-weight-bold\\\">Message</p>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <textarea class=\\\"textarea is-small is-fluid\\\" data-target=\\\"message\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"column is-3\\\">\\r\\n                <details>\\r\\n                    <summary>More options</summary>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <p class=\\\"has-text-weight-bold\\\">Player is </p>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <select data-target=\\\"group\\\" class=\\\"select is-small\\\">\\r\\n                                <option value=\\\"all\\\">anyone</option>\\r\\n                                <option value=\\\"staff\\\">a staff member</option>\\r\\n                                <option value=\\\"mod\\\">a mod</option>\\r\\n                                <option value=\\\"admin\\\">an admin</option>\\r\\n                                <option value=\\\"owner\\\">the owner</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <p class=\\\"has-text-weight-bold\\\">Player is not </p>\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <select data-target=\\\"not_group\\\" class=\\\"select is-small\\\">\\r\\n                                <option value=\\\"nobody\\\">nobody</option>\\r\\n                                <option value=\\\"staff\\\">a staff member</option>\\r\\n                                <option value=\\\"mod\\\">a mod</option>\\r\\n                                <option value=\\\"admin\\\">an admin</option>\\r\\n                                <option value=\\\"owner\\\">the owner</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"level-options\\\">\\r\\n                        <div class=\\\"control\\\">\\r\\n                            <input type=\\\"number\\\" class=\\\"input is-small\\\" value=\\\"0\\\" data-target=\\\"joins_low\\\" min=\\\"0\\\">\\r\\n                            <span class=\\\"has-text-weight-bold\\\"> &le; player joins &le; </span>\\r\\n                            <input type=\\\"number\\\" class=\\\"input is-small\\\" value=\\\"9999\\\" data-target=\\\"joins_high\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </details>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <button class=\\\"button is-small is-danger is-outlined\\\" data-do=\\\"delete\\\">Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<div class=\\\"container is-widescreen\\\">\\r\\n    <section class=\\\"section is-small\\\">\\r\\n        <span class=\\\"button is-primary is-adding-message\\\" title=\\\"Add trigger message\\\">+</span>\\r\\n        <h3 class=\\\"title is-4\\\">Triggers</h3>\\r\\n        <ul>\\r\\n            <li>The trigger will be checked against chat messages, if it matches, the message will be sent.</li>\\r\\n            <li>Triggers are case-insensitive.</li>\\r\\n            <li>{{NAME}}, {{Name}}, and {{name}} in the message will be replaced with the user's name.</li>\\r\\n            <li><code>*</code> will be treated as a wildcard.</li>\\r\\n            <li>Triggers are matched in order, if more than the max number are matched, later triggers will not be sent.</li>\\r\\n            <li>Change the maximum number of responses under settings.</li>\\r\\n        </ul>\\r\\n    </section>\\r\\n\\r\\n    <div class=\\\"messages-container\\\"></div>\\r\\n</div>\\r\\n\";\n\nvar annHtml = \"<template>\\r\\n    <div class=\\\"box\\\">\\r\\n        <div class=\\\"columns\\\">\\r\\n            <div class=\\\"column is-narrow is-hidden-touch\\\">\\r\\n                <span class=\\\"drag\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <p class=\\\"has-text-weight-bold\\\">Message</p>\\r\\n            </div>\\r\\n            <div class=\\\"column\\\">\\r\\n                <textarea class=\\\"textarea is-small is-fluid\\\" data-target=\\\"message\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"column is-narrow\\\">\\r\\n                <button class=\\\"button is-small is-danger is-outlined\\\" data-do=\\\"delete\\\">Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div>\\r\\n            Wait X minutes...\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<div class=\\\"container is-widescreen\\\">\\r\\n    <section class=\\\"section is-small\\\">\\r\\n        <span class=\\\"button is-primary is-adding-message\\\">+</span>\\r\\n        <h3 class=\\\"title is-4\\\">Announcements</h3>\\r\\n        <ul>\\r\\n            <li>These are sent according to a regular schedule.</li>\\r\\n            <li>If you have one announcement, it is sent every X minutes, if you have two, then the first is sent at X minutes, and the second\\r\\n            is sent X minutes after the first. Change X in the settings tab. Once the bot reaches the end of the list, it starts over\\r\\n            at the top.</li>\\r\\n            <li>If no players are online when a message is scheduled to be sent, no message will be sent and the next message will reset to the first message.</li>\\r\\n        </ul>\\r\\n    </section>\\r\\n    <div class=\\\"messages-container\\\"></div>\\r\\n</div>\\r\\n\";\n\nfunction getElementWithClass(className, element) {\r\n    if (!element)\r\n        return;\r\n    return element.classList.contains(className) ? element : getElementWithClass(className, element.parentElement);\r\n}\r\nclass MessagesTab extends RemovableMessageHelper {\r\n    constructor({ name, ex, id }) {\r\n        super(id, ex);\r\n        this.setup = () => __awaiter(this, void 0, void 0, function* () {\r\n            this.insertHTML();\r\n            this.template = this.tab.querySelector('template');\r\n            this.root = this.tab.querySelector('.messages-container');\r\n            // Auto save messages\r\n            this.tab.addEventListener('input', () => this.save());\r\n            // Create a new message\r\n            let button = this.tab.querySelector('.button.is-primary');\r\n            button.addEventListener('click', () => this.addMessage());\r\n            // Deleting messages\r\n            this.tab.addEventListener('click', event => {\r\n                const target = event.target;\r\n                if (target.matches('[data-do=delete]')) {\r\n                    event.preventDefault();\r\n                    // Todo: Undo\r\n                    const row = getElementWithClass('box', target);\r\n                    if (!row)\r\n                        return;\r\n                    row.remove();\r\n                }\r\n                this.save();\r\n            });\r\n            // Moving up / down\r\n            const dragger = dragula_1([this.root], {\r\n                moves(_el, _container, handle) {\r\n                    return handle.classList.contains('drag');\r\n                }\r\n            });\r\n            dragger.on('drop', () => this.save());\r\n            dragger.on('drag', (el) => {\r\n                const details = el.querySelector('details');\r\n                if (details)\r\n                    details.open = false;\r\n            });\r\n            this.ex.storage.get(this.id, []).forEach(message => {\r\n                this.addMessage(message);\r\n            });\r\n        });\r\n        this.getMessages = () => {\r\n            let messages = [];\r\n            this.root.querySelectorAll('.box').forEach(element => {\r\n                let data = {};\r\n                element.querySelectorAll('[data-target]').forEach((input) => {\r\n                    let name = input.dataset['target'];\r\n                    if (!name)\r\n                        return;\r\n                    switch (input.getAttribute('type')) {\r\n                        case 'number':\r\n                            data[name] = +input.value;\r\n                            break;\r\n                        default:\r\n                            data[name] = input.value;\r\n                    }\r\n                });\r\n                messages.push(data);\r\n            });\r\n            return messages;\r\n        };\r\n        this.ui = ex.bot.getExports('ui');\r\n        this.ex = ex;\r\n        this.tab = this.ui.addTab(name, 'messages');\r\n    }\r\n    remove() {\r\n        this.ui.removeTab(this.tab);\r\n    }\r\n    save() {\r\n        this.ex.storage.set(this.id, this.getMessages());\r\n    }\r\n}\r\nclass JoinTab extends MessagesTab {\r\n    constructor(ex) {\r\n        super({ name: 'Join', id: 'joinArr', ex });\r\n        this.insertHTML = () => {\r\n            this.tab.innerHTML = joinHtml;\r\n        };\r\n        this.addMessage = (msg = {}) => {\r\n            this.ui.buildTemplate(this.template, this.root, [\r\n                { selector: '[data-for=message-trim]', text: msg.message || '' },\r\n                { selector: '[data-target=message]', text: msg.message || '' },\r\n                { selector: '[data-target=joins_low]', value: msg.joins_low || 0 },\r\n                { selector: '[data-target=joins_high]', value: msg.joins_high || 9999 },\r\n                { selector: '[data-target=group]', value: msg.group || 'all' },\r\n                { selector: '[data-target=not_group]', value: msg.not_group || 'nobody' },\r\n            ]);\r\n        };\r\n    }\r\n}\r\nclass LeaveTab extends MessagesTab {\r\n    constructor(ex) {\r\n        super({ name: 'Leave', id: 'leaveArr', ex });\r\n        this.insertHTML = () => {\r\n            this.tab.innerHTML = leaveHtml;\r\n        };\r\n        this.addMessage = (msg = {}) => {\r\n            this.ui.buildTemplate(this.template, this.root, [\r\n                { selector: '[data-for=message-trim]', text: msg.message || '' },\r\n                { selector: '[data-target=message]', text: msg.message || '' },\r\n                { selector: '[data-target=joins_low]', value: msg.joins_low || 0 },\r\n                { selector: '[data-target=joins_high]', value: msg.joins_high || 9999 },\r\n                { selector: '[data-target=group]', value: msg.group || 'all' },\r\n                { selector: '[data-target=not_group]', value: msg.not_group || 'nobody' }\r\n            ]);\r\n        };\r\n    }\r\n}\r\nclass TriggerTab extends MessagesTab {\r\n    constructor(ex) {\r\n        super({ name: 'Trigger', id: 'triggerArr', ex });\r\n        this.insertHTML = () => {\r\n            this.tab.innerHTML = triggerHtml;\r\n        };\r\n        this.addMessage = (msg = {}) => {\r\n            this.ui.buildTemplate(this.template, this.root, [\r\n                { selector: '[data-target=message]', text: msg.message || '' },\r\n                { selector: '[data-target=trigger]', value: msg.trigger || '' },\r\n                { selector: '[data-target=joins_low]', value: msg.joins_low || 0 },\r\n                { selector: '[data-target=joins_high]', value: msg.joins_high || 9999 },\r\n                { selector: '[data-target=group]', value: msg.group || 'all' },\r\n                { selector: '[data-target=not_group]', value: msg.not_group || 'nobody' }\r\n            ]);\r\n        };\r\n    }\r\n}\r\nclass AnnouncementTab extends MessagesTab {\r\n    constructor(ex) {\r\n        super({ name: 'Announcements', id: 'announcementArr', ex });\r\n        this.insertHTML = () => {\r\n            this.tab.innerHTML = annHtml;\r\n        };\r\n        this.addMessage = (msg = {}) => {\r\n            this.ui.buildTemplate(this.template, this.root, [\r\n                { selector: '[data-target=message]', text: msg.message || '' },\r\n            ]);\r\n        };\r\n    }\r\n}\n\nvar css = \".messages-container input[type=number] {\\r\\n    width: 5em;\\r\\n    font-size: 0.6rem;\\r\\n}\\r\\n\\r\\n.messages-container {\\r\\n    border-top: 1px solid #cccccc;\\r\\n    padding-top: 1em;\\r\\n}\\r\\n\\r\\n.messages-container .box {\\r\\n    padding: 0.7em;\\r\\n    padding-bottom: 0;\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\\r\\n.messages-container .columns {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.messages-container .drag::after {\\r\\n    content: \\\" \\\\2261\\\";\\r\\n}\\r\\n\\r\\n.messages-container .level-options {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n}\\r\\n@media screen and (max-width: 768px) {\\r\\n    .messages-container .level-options {\\r\\n        flex-wrap: wrap;\\r\\n    }\\r\\n}\\r\\n\\r\\n.messages-container summary {\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.is-adding-message {\\r\\n    position: fixed;\\r\\n    left: 1em;\\r\\n    z-index: 10;\\r\\n}\\r\\n\\r\\n.messages-container p {\\r\\n    margin-right: 0.5em;\\r\\n}\\r\\n\\r\\n/** Copied from https://github.com/bevacqua/dragula/blob/b0e5c4/dist/dragula.css **/\\r\\n.gu-mirror {\\r\\n    position: fixed !important;\\r\\n    margin: 0 !important;\\r\\n    z-index: 9999 !important;\\r\\n    opacity: 0.8;\\r\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\r\\n    filter: alpha(opacity=80);\\r\\n}\\r\\n.gu-hide {\\r\\n    display: none !important;\\r\\n}\\r\\n.gu-unselectable {\\r\\n    -webkit-user-select: none !important;\\r\\n    -moz-user-select: none !important;\\r\\n    -ms-user-select: none !important;\\r\\n    user-select: none !important;\\r\\n}\\r\\n.gu-transit {\\r\\n    opacity: 0.2;\\r\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\r\\n    filter: alpha(opacity=20);\\r\\n}\\r\\n\";\n\nMessageBot.registerExtension('messages', function (ex, world) {\r\n    let listeners = [];\r\n    ex.remove = () => listeners.forEach(l => l.remove());\r\n    let hasLoaded = false;\r\n    let delayLoad = () => {\r\n        if (hasLoaded)\r\n            return;\r\n        hasLoaded = true;\r\n        let timeout = setTimeout(() => {\r\n            listeners = [\r\n                new JoinListener(ex),\r\n                new LeaveListener(ex),\r\n                new TriggerListener(ex),\r\n                new AnnouncementListener(ex),\r\n            ];\r\n        }, 500);\r\n        listeners = [{\r\n                remove: () => clearTimeout(timeout)\r\n            }];\r\n    };\r\n    world.onJoin.one(delayLoad);\r\n    world.onLeave.one(delayLoad);\r\n    world.onMessage.one(delayLoad);\r\n    // Loaded in a browser?\r\n    if (ex.bot.getExports('ui')) {\r\n        let style = document.head.appendChild(document.createElement('style'));\r\n        style.innerHTML = css;\r\n        let ui = ex.bot.getExports('ui');\r\n        ui.addTabGroup('Messages', 'messages');\r\n        let tabs = [\r\n            new JoinTab(ex),\r\n            new LeaveTab(ex),\r\n            new TriggerTab(ex),\r\n            new AnnouncementTab(ex),\r\n        ];\r\n        tabs.forEach(tab => tab.setup());\r\n        listeners = listeners.concat(...tabs, { remove: () => style.remove() }, { remove: () => ui.removeTabGroup('messages') });\r\n    }\r\n});\n","import { MessageBot } from '@bhmb/bot';\n\nfunction history(input) {\r\n    let history = [];\r\n    let current = 0;\r\n    function addToHistory(message) {\r\n        history.push(message);\r\n        while (history.length > 100) {\r\n            history.shift();\r\n        }\r\n        current = history.length;\r\n    }\r\n    function addIfNew(message) {\r\n        if (message != history.slice(-1).pop()) {\r\n            addToHistory(message);\r\n        }\r\n        else {\r\n            current = history.length;\r\n        }\r\n    }\r\n    input.addEventListener('keydown', event => {\r\n        if (event.key == 'ArrowUp') {\r\n            if (input.value.length && current == history.length) {\r\n                addToHistory(input.value);\r\n                current--;\r\n            }\r\n            if (history.length && current) {\r\n                input.value = history[--current];\r\n            }\r\n        }\r\n        else if (event.key == 'ArrowDown') {\r\n            if (history.length > current + 1) {\r\n                input.value = history[++current];\r\n            }\r\n            else if (history.length == current + 1) {\r\n                input.value = '';\r\n                current = history.length;\r\n            }\r\n        }\r\n        else if (event.key == 'Enter') {\r\n            addIfNew(input.value);\r\n        }\r\n    });\r\n}\n\nvar html = \"<template>\\r\\n    <li>\\r\\n        <span>NAME</span>\\r\\n        <span>: Message</span>\\r\\n    </li>\\r\\n</template>\\r\\n<div id=\\\"console\\\">\\r\\n    <div class=\\\"chat\\\">\\r\\n        <ul></ul>\\r\\n    </div>\\r\\n    <div class=\\\"chat-control\\\">\\r\\n        <div class=\\\"field has-addons\\\">\\r\\n            <p class=\\\"control is-expanded\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"input\\\" />\\r\\n            </p>\\r\\n            <p class=\\\"control\\\">\\r\\n                <button class=\\\"input button is-primary\\\">SEND</button>\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\nvar css = \"#console .mod > span:first-child {\\r\\n    color: #05f529;\\r\\n}\\r\\n\\r\\n#console .admin > span:first-child {\\r\\n    color: #2b26bd;\\r\\n}\\r\\n\\r\\n#console .chat {\\r\\n    margin: 0 1em;\\r\\n    height: calc(100vh - 52px - 4.25em);\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n#console .chat-control {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    width: 100vw;\\r\\n    background: #fff;\\r\\n}\\r\\n\\r\\n#console .field {\\r\\n    margin: 1em;\\r\\n}\\r\\n\";\n\nMessageBot.registerExtension('console', function (ex, world) {\r\n    if (!ex.bot.getExports('ui')) {\r\n        throw new Error('This extension should only be loaded in a browser, and must be loaded after the UI is loaded.');\r\n    }\r\n    const ui = ex.bot.getExports('ui');\r\n    // Create the tab.\r\n    let style = document.head.appendChild(document.createElement('style'));\r\n    style.textContent = css;\r\n    let tab = ui.addTab('Console');\r\n    tab.innerHTML = html;\r\n    let chatUl = tab.querySelector('ul');\r\n    let chatContainer = chatUl.parentElement;\r\n    let template = tab.querySelector('template');\r\n    // Handle sending\r\n    let input = tab.querySelector('input');\r\n    function userSend() {\r\n        ex.bot.send(input.value);\r\n        input.value = '';\r\n    }\r\n    input.addEventListener('keyup', event => {\r\n        if (event.key == 'Enter') {\r\n            userSend();\r\n        }\r\n    });\r\n    // History module, used to be a separate extension\r\n    history(input);\r\n    tab.querySelector('button').addEventListener('click', userSend);\r\n    // Auto scroll when new chat is added to the page, unless we are scrolled up.\r\n    new MutationObserver(function (events) {\r\n        let total = chatUl.children.length;\r\n        // Determine how many messages have been added\r\n        let addedHeight = 0;\r\n        for (let i = total - events.length; i < total; i++) {\r\n            addedHeight += chatUl.children[i].clientHeight;\r\n        }\r\n        // If we were scrolled down already, stay scrolled down\r\n        if (chatContainer.scrollHeight - chatContainer.clientHeight - chatContainer.scrollTop == addedHeight) {\r\n            chatContainer.scrollTop = chatContainer.scrollHeight;\r\n        }\r\n        // Remove old messages if necessary\r\n        while (chatUl.children.length > 500) {\r\n            chatUl.children[0].remove();\r\n        }\r\n    }).observe(chatUl, { childList: true, subtree: true });\r\n    // Add a message to the page\r\n    function addPlayerMessage(player, message) {\r\n        if (!message.length)\r\n            return;\r\n        let messageClass = 'player';\r\n        if (player.isAdmin)\r\n            messageClass = 'admin';\r\n        if (player.isMod)\r\n            messageClass = 'mod';\r\n        ui.buildTemplate(template, chatUl, [\r\n            { selector: 'li', 'class': messageClass },\r\n            { selector: 'span:first-child', text: player.name },\r\n            { selector: 'span:last-child', text: ': ' + message }\r\n        ]);\r\n    }\r\n    function addGenericMessage(message) {\r\n        if (!message.length)\r\n            return;\r\n        let li = document.createElement('li');\r\n        li.textContent = message;\r\n        chatUl.appendChild(li);\r\n    }\r\n    // Export required functions\r\n    let consoleExports = {\r\n        log: (message) => addPlayerMessage(world.getPlayer('SERVER'), message)\r\n    };\r\n    ex.exports = consoleExports;\r\n    function logJoins(player) {\r\n        if (ex.storage.get('logJoinIps', true)) {\r\n            consoleExports.log(`${player.name} (${player.ip}) joined.`);\r\n        }\r\n        else {\r\n            consoleExports.log(`${player.name} joined.`);\r\n        }\r\n    }\r\n    world.onJoin.sub(logJoins);\r\n    function logLeaves(player) {\r\n        consoleExports.log(player.name + ' left');\r\n    }\r\n    world.onLeave.sub(logLeaves);\r\n    function logMessages({ player, message }) {\r\n        addPlayerMessage(player, message);\r\n    }\r\n    world.onMessage.sub(logMessages);\r\n    function logOther(message) {\r\n        if (ex.storage.get('logUnparsedMessages', true)) {\r\n            addGenericMessage(message);\r\n        }\r\n    }\r\n    world.onOther.sub(logOther);\r\n    ex.remove = function () {\r\n        ui.removeTab(tab);\r\n        style.remove();\r\n        world.onJoin.unsub(logJoins);\r\n        world.onLeave.unsub(logLeaves);\r\n        world.onMessage.unsub(logMessages);\r\n        world.onOther.unsub(logOther);\r\n    };\r\n});\n","import { MessageBot } from '@bhmb/bot'\r\nimport { UIExtensionExports } from '@bhmb/ui'\r\n\r\nimport html from './extensions.html'\r\n\r\ninterface ExtensionInfo {\r\n    user: string\r\n    id: string\r\n    package: string\r\n    title: string\r\n    description: string\r\n    env: string\r\n}\r\n\r\nconst flatten = <T>(arr: T[][]): T[] => arr.reduce((carry, item) => carry.concat(item), [])\r\n// const pluck = <T, K extends keyof T>(arr: T[], key: K) => arr.map(item => item[key])\r\n\r\nexport const defaultRepo = `https://gitcdn.xyz/cdn/Blockheads-Messagebot/Extensions/master/extensions.json`\r\n\r\nfunction supported(info: ExtensionInfo): boolean {\r\n    let env = info.env.toLocaleLowerCase()\r\n    return [\r\n        env.includes('all'),\r\n        env.includes('browser'),\r\n        (env.includes('mac') && env.includes('cloud')),\r\n    ].some(Boolean) && /\\.(m?js|es)/.test(info.package)\r\n}\r\n\r\nMessageBot.registerExtension('extensions', ex => {\r\n    let ui = ex.bot.getExports('ui') as UIExtensionExports\r\n    let tab = ui.addTab('Extensions')\r\n    tab.innerHTML = html\r\n\r\n    tab.addEventListener('click', event => {\r\n        let target = event.target as HTMLElement\r\n        if (target.tagName != 'A') return\r\n        let id = target.getAttribute('ext_id')\r\n        if (!id) return\r\n\r\n        if (target.textContent == 'Install') {\r\n            load(id)\r\n        } else {\r\n            removeExtension(id)\r\n        }\r\n    })\r\n\r\n    ex.remove = () => {\r\n        throw new Error('This extension cannot be removed.')\r\n    }\r\n\r\n    function addExtension(id: string) {\r\n        try {\r\n            ex.bot.addExtension(id)\r\n            ex.storage.with<string[]>('autoload', [], ids => {\r\n                if (!ids.includes(id)) ids.push(id)\r\n            })\r\n            let button = tab.querySelector(`a[ext_id=\"${id}\"]`) as HTMLElement | null\r\n            if (button) button.textContent = 'Remove'\r\n        } catch (error) {\r\n            ui.notify('Error adding extension: ' + error)\r\n            try {\r\n                ex.bot.removeExtension(id, false)\r\n            } catch {}\r\n        }\r\n    }\r\n\r\n    function removeExtension(id: string) {\r\n        try {\r\n            ex.bot.removeExtension(id, true)\r\n            ex.storage.with<string[]>('autoload', [], ids => {\r\n                if (ids.includes(id)) ids.splice(ids.indexOf(id), 1)\r\n            })\r\n            let button = tab.querySelector(`a[ext_id=\"${id}\"]`) as HTMLElement | null\r\n            if (button) button.textContent = 'Install'\r\n        } catch (error) {\r\n            ui.notify('Error removing extension: ' + error)\r\n        }\r\n    }\r\n\r\n    // Load listener\r\n    let shouldLoad = new Set<string>()\r\n    MessageBot.extensionRegistered.sub(id => {\r\n        // If in developer mode, autoload unconditionally\r\n        if (ex.storage.get('devMode', false)) {\r\n            if (ex.bot.getExports(id)) ex.bot.removeExtension(id, false)\r\n            addExtension(id)\r\n        } else if (shouldLoad.has(id)) {\r\n            shouldLoad.delete(id)\r\n            addExtension(id)\r\n        }\r\n    })\r\n\r\n    let extensionMap = new Map<string, ExtensionInfo>()\r\n    function load(id: string) {\r\n        let info = extensionMap.get(id)\r\n        if (!info) {\r\n            console.warn('Could not load unknown ID:', id)\r\n            return\r\n        }\r\n        if (MessageBot.extensions.includes(id)) {\r\n            addExtension(id)\r\n        } else {\r\n            shouldLoad.add(id)\r\n            let script = document.head.appendChild(document.createElement('script'))\r\n            script.src = info.package\r\n        }\r\n    }\r\n\r\n    // Load any extension repos\r\n    // Repos listed first should have priority for duplicate ids\r\n    let repos = ex.storage.get('repos', defaultRepo).split(/\\r?\\n/).reverse()\r\n    let repoRequests = repos.map(repo => fetch(repo).then(r => r.json()))\r\n    Promise.all(repoRequests)\r\n        .then((responses: ExtensionInfo[][]) => {\r\n            flatten(responses).filter(supported).forEach(extension => {\r\n                extensionMap.set(extension.id, extension)\r\n            })\r\n        })\r\n        .then(() => {\r\n            // Load those extensions which should be autoloaded\r\n            ex.storage.get<string[]>('autoload', []).forEach(load)\r\n            createPage()\r\n        })\r\n\r\n    function createPage() {\r\n        for (let extension of extensionMap.values()) {\r\n            ui.buildTemplate(\r\n                tab.querySelector('template') as HTMLTemplateElement,\r\n                tab.querySelector('tbody') as HTMLElement,\r\n                [\r\n                    { selector: '[data-for=title]', text: extension.title },\r\n                    { selector: '[data-for=description]', text: extension.description },\r\n                    { selector: '[data-for=author]', text: extension.user },\r\n                    { selector: 'a', ext_id: extension.id },\r\n                ]\r\n            )\r\n        }\r\n    }\r\n})","export class MessageBotExtension {\n    /**\n     * Creates a new extension.\n     * @param id the extension id\n     * @param bot the bot that this extension is loaded from\n     */\n    constructor(id, bot) {\n        this.bot = bot;\n        /**\n         * Any exports that other extensions may call.\n         */\n        this.exports = {};\n        this.storage = bot.storage.prefix(id);\n        this.world = bot.world;\n    }\n    /**\n     * Removes the extension, listeners and ui should be removed here. Stored settings should not be removed.\n     */\n    remove() { }\n    /**\n     * Removes the extension. All listeners should be removed here.\n     */\n    uninstall() {\n        this.remove();\n        this.storage.clear();\n    }\n}\n//# sourceMappingURL=extension.js.map","/**\n * An event which can be subscribed to and dispatched\n */\nexport class SimpleEvent {\n    constructor() {\n        this.subscribers = [];\n    }\n    /**\n     * Subscribe to the event.\n     * @param listener The listener which will be called when the event is dispatched.\n     */\n    sub(listener) {\n        this.subscribers.push({ listener, once: false });\n    }\n    /**\n     * Unsubscribe from the event.\n     * @param listener The listener to remove.\n     */\n    unsub(listener) {\n        let index = this.subscribers.findIndex(sub => listener == sub.listener);\n        if (index != -1) {\n            this.subscribers.splice(index, 1);\n        }\n    }\n    /**\n     * Subscribes to the event only once.\n     * @param listener The listener which will be called when the event is dispatched.\n     */\n    one(listener) {\n        this.subscribers.push({ listener, once: true });\n    }\n    /**\n     * Dispatches an event, calling all listeners.\n     * @param arg the argument to call listeners with.\n     */\n    dispatch(arg) {\n        this.subscribers.forEach(({ listener, once }) => {\n            if (once)\n                this.unsub(listener);\n            listener(arg);\n        });\n    }\n    /**\n     * A helper to avoid exposing undesirable events.\n     */\n    asEvent() {\n        let that = this;\n        return {\n            sub(listener) {\n                return that.sub(listener);\n            },\n            one(listener) {\n                return that.one(listener);\n            },\n            unsub(listener) {\n                return that.unsub(listener);\n            },\n        };\n    }\n}\n//# sourceMappingURL=events.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SimpleEvent } from './events';\n/**\n * Internal class used by the [[World]] class to watch chat.\n * @hidden\n */\nexport class ChatWatcher {\n    /**\n     * Creates a new ChatWatcher\n     * @param api the api to be used to communicate with chat\n     * @param online a shared array with the host world class that this class keeps up to date.\n     */\n    constructor(api, online) {\n        this.api = api;\n        this.online = online;\n        this._onMessage = new SimpleEvent();\n        this._onJoin = new SimpleEvent();\n        this._onLeave = new SimpleEvent();\n        this._onOther = new SimpleEvent();\n        this.timeoutId = null;\n        /**\n         * Parses a chat message, firing the appropriate events if required.\n         */\n        this.parse = (message) => {\n            let parseError = () => {\n                this._onOther.dispatch(message);\n            };\n            if (/^[^a-z]+ - Player Connected /.test(message)) {\n                try {\n                    let [, name, ip] = message.match(/Connected ([^a-z]{3,}) \\| ([\\d.]+) \\| .{32}$/);\n                    if (!this.online.includes(name)) {\n                        this.online.includes(name) || this.online.push(name);\n                        this._onJoin.dispatch({ name, ip });\n                        return;\n                    }\n                }\n                catch (_) { }\n                return parseError();\n            }\n            if (/^[^a-z]+ - Player Disconnected /.test(message)) {\n                try {\n                    let [, name] = message.match(/Disconnected ([^a-z]{3,})$/);\n                    if (this.online.includes(name)) {\n                        this.online.splice(this.online.indexOf(name), 1);\n                        this._onLeave.dispatch(name);\n                        return;\n                    }\n                }\n                catch (_) { }\n                return parseError();\n            }\n            if (message.slice(0, 18).includes(': ')) {\n                let name = this.getUser(message);\n                if (name) {\n                    message = message.substr(name.length + 2);\n                    if (name == 'SERVER' && message.startsWith('/')) {\n                        return parseError();\n                    }\n                    this._onMessage.dispatch({ name, message });\n                    return;\n                }\n            }\n            return parseError();\n        };\n        /**\n         * Continually checks chat for new messages\n         * @param lastId the ID to pass to the API to get only most recent messages.\n         */\n        this.checkChat = (lastId) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                let { log, nextId } = yield this.api.getMessages(lastId);\n                if (this.timeoutId == null)\n                    return;\n                log.forEach(this.parse);\n                this.timeoutId = setTimeout(this.checkChat, 5000, nextId);\n            }\n            catch (_) {\n                // Network error, wait 30 seconds before retrying\n                this.timeoutId = setTimeout(this.checkChat, 30000, 0);\n                return;\n            }\n        });\n    }\n    /**\n     * Event which fires when a player joins the server.\n     */\n    get onJoin() {\n        return this._onJoin.asEvent();\n    }\n    /**\n     * Event which fires when a player leaves the server.\n     */\n    get onLeave() {\n        return this._onLeave.asEvent();\n    }\n    /**\n     * Event which fires when a player sends a message in chat.\n     */\n    get onMessage() {\n        return this._onMessage.asEvent();\n    }\n    /**\n     * Event which fires when a chat message cannot be parsed as a message, join, or leave.\n     */\n    get onOther() {\n        return this._onOther.asEvent();\n    }\n    /**\n     * True if the watcher is currently running, otherwise false.\n     */\n    get running() {\n        return this.timeoutId != null;\n    }\n    /**\n     * Starts the listener. Calling multiple times will not result in multiple listeners being started.\n     */\n    start() {\n        if (this.timeoutId)\n            this.stop();\n        this.timeoutId = setTimeout(this.checkChat, 0, 0);\n    }\n    /**\n     * Stops the listener if it is running. If not running, does nothing.\n     */\n    stop() {\n        if (this.timeoutId)\n            clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n    }\n    /**\n     * Parses a message to extract a player name.\n     * @param message the message to extract a name from.\n     */\n    getUser(message) {\n        for (let i = 18; i > 4; i--) {\n            let possibleName = message.substring(0, message.lastIndexOf(': ', i));\n            if (this.online.includes(possibleName) || possibleName == 'SERVER') {\n                return possibleName;\n            }\n        }\n        // Player is most likely offline\n        if (/[^a-z]{3,16}: /.test(message))\n            return message.substring(0, message.lastIndexOf(': ', 18));\n        // Invalid name\n        return '';\n    }\n}\n//# sourceMappingURL=chatWatcher.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Player } from './player';\nimport { ChatWatcher } from './chatWatcher';\nimport { SimpleEvent } from './events';\nconst cloneDate = (d) => new Date(d.getTime());\nconst PLAYERS_KEY = 'players';\nconst LAST_UPDATE_KEY = 'lastPlayersUpdate';\nexport class World {\n    constructor(api, storage) {\n        this._cache = {};\n        this._events = {\n            onJoin: new SimpleEvent(),\n            onLeave: new SimpleEvent(),\n            onMessage: new SimpleEvent(),\n        };\n        this._online = [];\n        this._lists = { adminlist: [], modlist: [], whitelist: [], blacklist: [] };\n        this._commands = new Map();\n        /**\n         * Gets an overview of the server info\n         */\n        this.getOverview = (refresh = false) => __awaiter(this, void 0, void 0, function* () {\n            if (!this._cache.overview || refresh) {\n                let overview = yield (this._cache.overview = this._api.getOverview());\n                // Add online players to the online list if they aren't already online\n                overview.online.forEach(name => this._online.includes(name) || this._online.push(name));\n                // Make sure the owner has the owner flag set to true\n                this._storage.with(PLAYERS_KEY, {}, players => {\n                    players[overview.owner] = players[overview.owner] || { ip: '', ips: [], joins: 0 };\n                    players[overview.owner].owner = true;\n                });\n            }\n            let overview = yield this._cache.overview;\n            return Object.assign({}, overview, { created: cloneDate(overview.created), last_activity: cloneDate(overview.last_activity), credit_until: cloneDate(overview.credit_until), online: this.online });\n        });\n        /**\n         * Returns the current world status, will always make a request to the server.\n         */\n        this.getStatus = () => this._api.getStatus();\n        /**\n         * Gets the server's lists\n         */\n        this.getLists = (refresh = false) => {\n            if (!this._cache.lists || refresh) {\n                this._cache.lists = this._api.getLists().then(lists => this._lists = lists);\n            }\n            return this._cache.lists\n                .then(lists => ({\n                adminlist: [...lists.adminlist],\n                modlist: [...lists.modlist],\n                whitelist: [...lists.whitelist],\n                blacklist: [...lists.blacklist]\n            }));\n        };\n        /**\n         * Sets the server's lists and reloads the world lists if required.\n         *\n         * @param lists WorldLists one or more list to update. If a list is not provided it will not be changed.\n         * @return a promise which will resolve when the lists have been updated, or throw if an error occurred.\n         */\n        this.setLists = (lists) => __awaiter(this, void 0, void 0, function* () {\n            let currentLists = yield this.getLists();\n            yield this._api.setLists(Object.assign({}, currentLists, lists));\n            yield this.getLists(true);\n        });\n        /**\n         * Gets the server logs\n         *\n         * @param refresh if true, will get the latest logs, otherwise will returned the cached version.\n         */\n        this.getLogs = (refresh = false) => __awaiter(this, void 0, void 0, function* () {\n            if (!this._cache.logs || refresh) {\n                const updatePlayers = !this._cache.logs;\n                this._cache.logs = this._api.getLogs();\n                if (updatePlayers)\n                    yield this._updatePlayers();\n            }\n            let lines = yield this._cache.logs;\n            return lines.slice().map(line => (Object.assign({}, line, { timestamp: cloneDate(line.timestamp) })));\n        });\n        /**\n         * Sends the specified message, returns a promise that will reject if the send fails and resolve otherwise.\n         *\n         * @param message the message to send\n         */\n        this.send = (message) => {\n            if (message.startsWith('/'))\n                this._events.onMessage.dispatch({ player: this.getPlayer('SERVER'), message });\n            return this._api.send(message);\n        };\n        /**\n         * Gets a specific player by name\n         */\n        this.getPlayer = (name) => {\n            name = name.toLocaleUpperCase();\n            let players = this._storage.get(PLAYERS_KEY, {});\n            return new Player(name, players[name] || { ip: '', ips: [], joins: 0 }, this._lists);\n        };\n        /**\n         * Adds a listener for a single command, can be used when a command can be statically matched.\n         *\n         * @param command the command that the listener should be called for, case insensitive\n         * @param listener the function which should be called whenever the command is used\n         * @example\n         * world.addCommand('marco', () => { ex.bot.send('Polo!'); });\n         */\n        this.addCommand = (command, listener) => {\n            command = command.toLocaleUpperCase();\n            if (this._commands.has(command)) {\n                throw new Error(`The command \"${command}\" has already been added.`);\n            }\n            this._commands.set(command, listener);\n        };\n        /**\n         * Removes a listener for a command, if it exists.\n         *\n         * @param command the command for which the listener should be removed.\n         */\n        this.removeCommand = (command) => {\n            this._commands.delete(command.toLocaleUpperCase());\n        };\n        /**\n         * Starts the world, if it is not already started. Will not reject.\n         */\n        this.start = () => this._api.start();\n        /**\n         * Stops the world if it is running. Will not throw.\n         */\n        this.stop = () => this._api.stop();\n        /**\n         * Sends a restart request, if the world is offline no actions will be taken.\n         */\n        this.restart = () => this._api.restart();\n        this._api = api;\n        this._storage = storage;\n        this._createWatcher();\n        this.getOverview(); // Sets the owner, gets initial online players\n        this.getLists(); // Loads the current server lists\n    }\n    /**\n     * Fires whenever a player joins the server\n     */\n    get onJoin() {\n        return this._events.onJoin.asEvent();\n    }\n    /**\n     * Fires whenever a player leaves the server.\n     */\n    get onLeave() {\n        return this._events.onLeave.asEvent();\n    }\n    /**\n     * Fires whenever a player or the server sends a message in chat.\n     * Includes messages starting with /\n     */\n    get onMessage() {\n        return this._events.onMessage.asEvent();\n    }\n    /**\n     * Fires whenever a message that cannot be parsed is encountered.\n     */\n    get onOther() {\n        // This class doesn't do anything with the onOther events, so just pass it through.\n        return this._chatWatcher.onOther;\n    }\n    /**\n     * Gets the currently online players\n     */\n    get online() {\n        return [...this._online];\n    }\n    /**\n     * Gets all players who have joined the server\n     */\n    get players() {\n        let players = this._storage.get(PLAYERS_KEY, {});\n        return Object.keys(players).map(this.getPlayer);\n    }\n    /**\n     * Internal init function\n     */\n    _createWatcher() {\n        let watcher = this._chatWatcher = new ChatWatcher(this._api, this._online);\n        watcher.onJoin.sub(arg => this._addUser(arg));\n        watcher.onLeave.sub(name => this._events.onLeave.dispatch(this.getPlayer(name)));\n        watcher.onMessage.sub(({ name, message }) => {\n            this._events.onMessage.dispatch({ player: this.getPlayer(name), message });\n        });\n        this.onMessage.sub(({ player, message }) => {\n            if (/^\\/[^ ]/.test(message)) {\n                const [, command, args] = message.match(/^\\/([^ ]+) ?(.*)$/);\n                const handler = this._commands.get(command.toLocaleUpperCase());\n                if (handler)\n                    handler(player, args);\n            }\n        });\n        watcher.start();\n    }\n    _updatePlayers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Note: We can't just use this.getLogs() here due to magic required to make players update only once.\n            const lines = yield this._cache.logs;\n            const { name } = yield this.getOverview();\n            const lastUpdate = this._storage.get(LAST_UPDATE_KEY, 0);\n            for (const line of lines) {\n                if (line.timestamp.getTime() < lastUpdate)\n                    continue;\n                if (!line.message.startsWith(`${name} - Player Connected`))\n                    continue;\n                const [, user, ip] = line.message.match(/Connected ([^a-z]{3,}) \\| ([\\d.]+) \\| .{32}$/);\n                this._addUser({ name: user, ip });\n            }\n        });\n    }\n    _addUser({ name, ip }) {\n        name = name.toLocaleUpperCase();\n        this._storage.with(PLAYERS_KEY, {}, players => {\n            const player = players[name] = players[name] || { ip, ips: [ip], joins: 0 };\n            player.joins++;\n            player.ip = ip;\n            if (!player.ips.includes(ip))\n                player.ips.push(ip);\n        });\n        this._events.onJoin.dispatch(this.getPlayer(name));\n        // Prevent this join from being counted twice\n        this._storage.set(LAST_UPDATE_KEY, Date.now());\n    }\n}\n//# sourceMappingURL=world.js.map","/**\n * The storage class used by the [[MessageBot]] class and all [[MessageBotExtension]] instances.\n */\nexport class Storage {\n    /**\n     * Utility method to use and automatically save a key\n     * @param key the key use when getting and setting the value\n     * @param fallback the fallback if the key doesn't exist\n     * @param callback the function to be called with the data, if the callback returns null or undefined, it is assumed that the value has been mutated and will be saved.\n     */\n    with(key, fallback, callback) {\n        let value = this.get(key, fallback);\n        let result = callback(value);\n        this.set(key, result == null ? value : result);\n    }\n}\n//# sourceMappingURL=storage.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { MessageBotExtension } from './extension';\nimport { World } from './world';\nimport { Player } from './player';\nimport { Storage } from './storage';\nimport { SimpleEvent } from './events';\nexport { MessageBotExtension, World, Player, Storage, SimpleEvent };\nlet registeredExtensions = new Map();\nlet extensionRegistered = new SimpleEvent();\nlet extensionDeregistered = new SimpleEvent();\nexport class MessageBot {\n    /**\n     *\n     * @param storage The storage instance to be used by the bot.\n     * @param info The world info that is used to create the API to interact with the world.\n     */\n    constructor(storage, info) {\n        this.storage = storage;\n        /**\n         * All loaded extension instances for this bot.\n         */\n        this._extensions = new Map();\n        if (!MessageBot.dependencies)\n            throw new Error('Dependencies must be set before creating this class.');\n        this.world = new World(new MessageBot.dependencies.Api(info), storage);\n    }\n    /**\n     * Registers an extension that can be loaded by instances of the bot.\n     * Note: If an extension has already been loaded from a previously registered initializer, it will not be overwritten.\n     * @param id the extension ID, will be normalized to lower case.\n     * @param initializer the function to be called to set up the extension.\n     */\n    static registerExtension(id, initializer) {\n        id = id.toLocaleLowerCase();\n        registeredExtensions.set(id, initializer);\n        extensionRegistered.dispatch(id);\n    }\n    /**\n     * Removes an extension initializer from the registry, can be used to prevent an extension from being loaded in multiple bots at once (generally a bad idea).\n     * @param id the id of the extension to deregister\n     */\n    static deregisterExtension(id) {\n        id = id.toLocaleLowerCase();\n        if (registeredExtensions.delete(id)) {\n            extensionDeregistered.dispatch(id);\n        }\n    }\n    /**\n     * An array of all registered extensions.\n     */\n    static get extensions() {\n        return [...registeredExtensions.keys()];\n    }\n    /**\n     * An array of currently loaded extension ids\n     */\n    get extensions() {\n        return [...this._extensions.keys()];\n    }\n    /**\n     * Shortcut for `MessageBot.dependencies.fetch`\n     */\n    get fetch() {\n        return MessageBot.dependencies.fetch;\n    }\n    /**\n     * Gets the exports of an extension, returns undefined if the extension is not loaded.\n     * @param id the extension id to get exports from\n     */\n    getExports(id) {\n        let ex = this._extensions.get(id.toLocaleLowerCase());\n        if (ex)\n            return ex.exports;\n    }\n    /**\n     * Adds an extension to this bot. Calls the init function supplied when registering the extension.\n     * @param id the id of the registered extension to add.\n     */\n    addExtension(id) {\n        id = id.toLocaleLowerCase();\n        if (this._extensions.has(id))\n            throw new Error(`The ${id} extension has already been added.`);\n        let creator = registeredExtensions.get(id);\n        if (!creator)\n            throw new Error(`The ${id} extension has not been registered.`);\n        let ex = new MessageBotExtension(id, this);\n        this._extensions.set(id, ex);\n        creator.call(ex, ex, this.world);\n    }\n    /**\n     * Removes a currently loaded extension. Should not be used by published extensions unless\n     * the extension is an extension manager.\n     * @param id the id of the extension to remove\n     * @param uninstall whether or not the extension should be completely removed, or just unloaded.\n     */\n    removeExtension(id, uninstall) {\n        id = id.toLocaleLowerCase();\n        let ex = this._extensions.get(id);\n        if (!ex)\n            throw new Error(`The ${id} extension is not registered.`);\n        try {\n            if (uninstall) {\n                ex.uninstall();\n            }\n            else {\n                ex.remove();\n            }\n        }\n        finally {\n            this._extensions.delete(id);\n        }\n    }\n    /**\n     * Sends a message to the world for this bot, should usually be used in place of world.send.\n     *\n     * @param message the message to send\n     * @param params any variables to inject into the message. If `name` is provided, it will be available through {{NAME}}, {{Name}} and {{name}}\n     */\n    send(message, _a = {}) {\n        var params = __rest(_a, []);\n        // Common enough to be done here, set the name of the player up right.\n        if (params.name && params.name.length) {\n            let name = params.name.toLocaleLowerCase();\n            params = Object.assign({}, params, { name, Name: name[0].toLocaleUpperCase() + name.substr(1), NAME: name.toLocaleUpperCase() });\n        }\n        let safeKeyRegex = Object.keys(params)\n            .map(key => key.replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'))\n            .join('}}|{{');\n        // Don't bother replacing if nothing to search for\n        if (safeKeyRegex.length) {\n            message = message.replace(new RegExp(`{{${safeKeyRegex}}}`, 'g'), (key) => {\n                return params[key.substring(2, key.length - 2)];\n            });\n        }\n        this.world.send(message).catch(() => { });\n    }\n}\n/**\n * An event that fires whenever an extension is registered or re-registered.\n */\nMessageBot.extensionRegistered = extensionRegistered.asEvent();\n/**\n * An event that fires when an extension is deregistered, if it has been registered. Will not fire when an extension is re-registered.\n */\nMessageBot.extensionDeregistered = extensionDeregistered.asEvent();\n//# sourceMappingURL=index.js.map","import { MessageBot as Bot } from '@bhmb/bot'\r\n\r\n// Custom bot class to support splitting messages\r\n\r\nexport class MessageBot extends Bot implements Bot {\r\n    send(message: string, { ...params }: {[key: string]: string} = {}): void {\r\n        let messages: string[]\r\n        // Split the message if splitting is enabled.\r\n        if (this.storage.get('splitMessages', false)) {\r\n            messages = message.split(this.storage.get('splitToken', '<split>'))\r\n        } else {\r\n            messages = [message]\r\n        }\r\n\r\n        for (let msg of messages) {\r\n            super.send(msg, params)\r\n        }\r\n    }\r\n}","import { Storage as AStorage } from '@bhmb/bot'\r\n\r\nexport class Storage extends AStorage {\r\n    constructor(private head: string) {\r\n        super()\r\n        // For readability\r\n        this.head += '/'\r\n    }\r\n\r\n    get<T>(key: string, fallback: T): T {\r\n        // JSON.parse correctly handles null so it's fine to declare this as string.\r\n        let item = localStorage.getItem(this.head + key) as string\r\n        try {\r\n            let parsed = JSON.parse(item)\r\n            return parsed == null ? fallback : parsed\r\n        } catch {\r\n            return fallback\r\n        }\r\n    }\r\n\r\n    set(key: string, value: any): void {\r\n        localStorage.setItem(this.head + key, JSON.stringify(value))\r\n    }\r\n\r\n    clear(prefix: string = ''): void {\r\n        this.keys(prefix)\r\n            .forEach(key => localStorage.removeItem(this.head + key))\r\n    }\r\n\r\n    keys(prefix: string = ''): string[] {\r\n        return Object.keys(localStorage)\r\n            .filter(key => key.startsWith(this.head + prefix))\r\n            .map(key => key.substr(this.head.length))\r\n    }\r\n\r\n    prefix(prefix: string): AStorage {\r\n        return new Storage(this.head + prefix)\r\n    }\r\n}\r\n","import { MessageBot } from '@bhmb/bot'\r\nimport { UIExtensionExports } from '@bhmb/ui'\r\n\r\nimport html from './settings.html'\r\n\r\nimport { defaultRepo } from './extensions'\r\n\r\nconst settingDefaults: [string, string | number | boolean][] = [\r\n    // General\r\n    ['messages/announcementDelay', 10],\r\n    ['messages/maxResponses', 3],\r\n    ['console/logJoinIps', true],\r\n    ['console/logUnparsedMessages', true],\r\n    // Advanced\r\n    ['messages/regexTriggers', false],\r\n    ['messages/disableWhitespaceTrimming', false],\r\n    ['splitMessages', false],\r\n    ['splitToken', '<split>'],\r\n    ['extensions/devMode', false],\r\n    ['extensions/repos', defaultRepo],\r\n]\r\n\r\nMessageBot.registerExtension('settings', function (ex) {\r\n    let settingsRoot = ex.bot.storage\r\n    let ui = ex.bot.getExports('ui') as UIExtensionExports\r\n\r\n    let tab = ui.addTab('Settings')\r\n    tab.innerHTML = html\r\n\r\n    for (let [key, def] of settingDefaults) {\r\n        let el = tab.querySelector(`[data-target=\"${key}\"]`) as HTMLInputElement\r\n\r\n        if (typeof def == 'boolean') {\r\n            el.checked = settingsRoot.get(key, def)\r\n        } else {\r\n            el.value = String(settingsRoot.get(key, def))\r\n        }\r\n    }\r\n\r\n    tab.addEventListener('change', () => {\r\n        for (let [key, def] of settingDefaults) {\r\n            let el = tab.querySelector(`[data-target=\"${key}\"]`) as HTMLInputElement\r\n\r\n            if (typeof def == 'boolean') {\r\n                settingsRoot.set(key, el.checked)\r\n            } else if (typeof def == 'number') {\r\n                settingsRoot.set(key, +el.value)\r\n            } else {\r\n                settingsRoot.set(key, el.value)\r\n            }\r\n        }\r\n    })\r\n\r\n    function importBackup(backup: string) {\r\n        let parsed: { [k: string]: string }\r\n        try {\r\n            parsed = JSON.parse(backup)\r\n            if (parsed === null) {\r\n                throw new Error('Invalid backup')\r\n            }\r\n        } catch (e) {\r\n            ui.notify('Invalid backup code. No action taken.')\r\n            return\r\n        }\r\n\r\n        localStorage.clear()\r\n\r\n        Object.keys(parsed).forEach((key) => {\r\n            localStorage.setItem(key, parsed[key])\r\n        })\r\n\r\n        location.reload()\r\n    }\r\n\r\n    (tab.querySelector('[data-do=show_backup]') as HTMLElement).addEventListener('click', () => {\r\n        // Must be loaded in a browser, so safe to use localStorage\r\n        let backup = JSON.stringify(localStorage).replace(/</g, '&lt;')\r\n        ui.alert(`<p>Copy this to a safe place.</p><textarea class=\"textarea\">${backup}</textarea>`)\r\n    })\r\n\r\n    ;(tab.querySelector('[data-do=import_backup]') as HTMLElement).addEventListener('click', () => {\r\n        ui.prompt('Enter your backup code, this will reload the page:', result => {\r\n            if (result) {\r\n                importBackup(result)\r\n            }\r\n        })\r\n    })\r\n\r\n    ;(tab.querySelector('[data-do=download_backup]') as HTMLElement).addEventListener('click', () => {\r\n        let backup = JSON.stringify(localStorage, undefined, 4)\r\n\r\n        let element = document.createElement('a')\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(backup))\r\n        element.setAttribute('download', 'bot_backup.txt')\r\n\r\n        element.style.display = 'none'\r\n        document.body.appendChild(element)\r\n\r\n        element.click()\r\n\r\n        document.body.removeChild(element)\r\n    })\r\n\r\n    ;(tab.querySelector('[data-do=upload_backup]') as HTMLElement).addEventListener('click', () => {\r\n        if (!File || !FileReader || !FileList || !Blob) {\r\n            ui.notify(`It looks like your browser doesn't support this.`)\r\n            return\r\n        }\r\n\r\n        let input = document.createElement('input')\r\n        input.type = 'file'\r\n        input.addEventListener('change', () => {\r\n            if (!input.files || input.files[0].type != 'text/plain') {\r\n                ui.notify('Upload a text file.')\r\n                return\r\n            }\r\n\r\n            let reader = new FileReader()\r\n            reader.addEventListener('load', () => {\r\n                importBackup(reader.result as string)\r\n            })\r\n\r\n            reader.readAsText(input.files[0])\r\n        })\r\n\r\n        input.click()\r\n    })\r\n\r\n    ex.remove = function () {\r\n        ui.removeTab(tab)\r\n    }\r\n})","import { MessageBot as CustomBot } from './bot'\r\nimport { MessageBot, SimpleEvent } from '@bhmb/bot'\r\nimport { Api, getWorlds } from 'blockheads-cloud-api'\r\nimport { WorldInfo } from 'blockheads-api-interface'\r\nimport { Storage } from './storage'\r\nimport '@bhmb/ui'\r\nimport '@bhmb/messages'\r\nimport '@bhmb/console'\r\nimport './settings'\r\nimport './extensions'\r\n\r\nif ((window as any)['@bhmb/bot']) {\r\n    throw new Error('Bot already loaded.')\r\n}\r\n\r\n(window as any)['@bhmb/bot'] = { MessageBot, SimpleEvent }\r\nconst worldId: string = (window as any).worldId.toString()\r\n\r\nif (location.hostname != 'portal.theblockheads.net') {\r\n    if (confirm('You are not on the portal, go there now?')) {\r\n        location.assign('http://portal.theblockheads.net')\r\n    }\r\n}\r\n\r\nif (!worldId) {\r\n    alert('You must be on a world page to start the bot')\r\n    throw new Error('Bad page')\r\n}\r\n// Kill the original listener\r\n(window as any).pollChat = () => {}\r\n\r\nMessageBot.dependencies = { Api, getWorlds, fetch }\r\n\r\nlet info: WorldInfo = {\r\n    name: (document.querySelector('#title') as HTMLElement).textContent as string,\r\n    id: worldId\r\n}\r\n\r\nasync function main() {\r\n    let bot = new CustomBot(new Storage(`/${worldId}`), info)\r\n    bot.addExtension('ui')\r\n    bot.addExtension('console')\r\n    ;(document.querySelector('.nav-item') as HTMLElement).click()\r\n    bot.addExtension('messages')\r\n    bot.addExtension('settings')\r\n    bot.addExtension('extensions')\r\n\r\n    // Check to see if the bot is loaded already\r\n    const loadChecker = (event: StorageEvent) => {\r\n        if (event.key === 'load_indicator' + worldId && event.newValue === '1') {\r\n            localStorage.setItem('already_loaded' + worldId, '1')\r\n            localStorage.setItem('load_indicator' + worldId, '0')\r\n        }\r\n    }\r\n    const loadWarner = (event: StorageEvent) => {\r\n        if (event.key === 'already_loaded' + worldId && event.newValue === '1') {\r\n            localStorage.setItem('already_loaded' + worldId, '0')\r\n            bot.getExports('ui')!\r\n                .alert('Warning: The bot is already loaded in another tab. If you leave this tab open, your storage may be overwritten and messages may be sent twice.')\r\n        }\r\n    }\r\n    addEventListener('storage', loadChecker)\r\n    addEventListener('storage', loadWarner)\r\n    // Fire the event so that we will be warned if another tab is already opened\r\n    localStorage.setItem('load_indicator' + worldId, '1')\r\n    // Reset the load indicator so that if another tab isn't opened, we will get an event when it is opened.\r\n    localStorage.setItem('load_indicator' + worldId, '0')\r\n\r\n    await bot.world.start()\r\n    await bot.world.getLists(true)\r\n}\r\nmain()\r\n\r\n"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","equalCaseInsensitive","a","b","localeCompare","undefined","sensitivity","arrayContainsAny","haystack","needles","some","item","needle","unescapeHTML","html","map","lt","gt","amp","#39","quot","replace","_","first","makeRequest","url","options","headers","X-Requested-With","method","request","root","assign","mode","credentials","redirect","requestJSON","r","json","requestPage","text","getWorlds","this","worlds","split","forEach","line","test","name","match","id","push","api","menuSlider","document","querySelector","toggleMenu","classList","toggle","el","querySelectorAll","addEventListener","tabs","Map","groups","container","getElementById","menuContainer","event","nav","target","tab","get","Array","from","children","child","remove","add","span","addTab","groupName","div","appendChild","createElement","parent","textContent","set","removeTab","content","entries","delete","addTabGroup","details","parentElement","summary","removeTabGroup","group","handleRule","rule","element","innerHTML","blacklist","HTMLTextAreaElement","HTMLSelectElement","selected","keys","filter","key","includes","setAttribute","buildTemplate","template","rules","importNode","selector","console","warn","notify","displayTime","body","timeouts","setTimeout","clearTimeout","alertInstance","active","queue","modal","modalBody","modalFooter","addButton","button","styles","style","showAlert","buttons","callback","shift","isArray","buttonHandler","tagName","err","error","removeEventListener","alert","prompt","outerHTML","polyfill","head","window","parentNode","getAttribute","open","removeAttribute","checkJoins","player","message","joins","joins_low","joins_high","checkGroups","isInGroup","not_group","isStaff","isMod","isAdmin","isOwner","addEventEasy","type","fn","capturing","addEventHard","attachEvent","wrap","removeEventEasy","removeEventHard","listener","unwrap","detachEvent","fabricateEvent","model","eventmap_1","customEvent","detail","doc","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","wrapperFactory","originalEvent","commonjsGlobal","srcElement","preventDefault","returnValue","stopPropagation","cancelBubble","which","keyCode","wrapper","hardCache","find","splice","lookupClass","className","cached","cache","lastIndex","RegExp","start","end","addClass","current","rmClass","trim","dragula","initialContainers","isContainer","drake","containers","o","events","op","touchy","documentElement","grab","release","eventualMovements","startBecauseMouseMoved","movements","crossvent","preventGrabbed","destroy","_grabbed","_moveX","clientX","_moveY","clientY","whichMouseButton","metaKey","ctrlKey","context","canStart","isInput","focus","ignoreInputTextSelection","getCoord","doc$1","elementFromPoint","grabbed","offset","getOffset","_item","_offsetX","left","_offsetY","top","classes","_copy","renderMirrorImage","drag","dragging","_mirror","handle","getParent","invalid","source","moves","nextEl","canMove","manualStart","isCopy","cloneNode","emit","_source","_initialSibling","_currentSibling","invalidTarget","drop","ungrab","dropTarget","findDropTarget","getElementBehindPoint","copySortSource","removeOnSpill","cancel","removeChild","isInitialPlacement","cleanup","revert","reverts","arguments","revertOnSpill","initial","insertBefore","removeMirrorImage","rm","_renderTimer","_lastDropTarget","sibling","elementBehindCursor","immediate","getImmediateChild","reference","getReference","accepts","moved","x","y","changed","spillOver","spillOut","rect","getBoundingClientRect","width","getRectWidth","height","getRectHeight","mirrorContainer","after","horizontal","direction","len","copy","always","never","emitter","on","touch","mouseup","mousedown","mousemove","pointers","microsoft","navigator","pointerEnabled","msPointerEnabled","touches","getScroll","scrollProp","offsetProp","clientHeight","point","state","right","bottom","isEditable","contentEditable","nextElementSibling","nextSibling","nodeType","getEventHost","targetTouches","changedTouches","coord","host","missMap","pageX","pageY","getElementWithClass","contains","history","input","addToHistory","addIfNew","slice","pop","info","env","toLocaleLowerCase","Boolean","package","MessageBotExtension","[object Object]","bot","exports","storage","prefix","world","clear","Player","lists","_name","_info","_lists","ip","ips","hasJoined","owner","adminlist","modlist","isWhitelisted","whitelist","isBanned","entry","substr","SimpleEvent","subscribers","once","index","findIndex","sub","arg","unsub","that","one","ChatWatcher","online","_onMessage","_onJoin","_onLeave","_onOther","timeoutId","parse","parseError","dispatch","getUser","startsWith","checkChat","lastId","log","nextId","getMessages","onJoin","asEvent","onLeave","onMessage","onOther","running","stop","possibleName","substring","lastIndexOf","cloneDate","d","Date","getTime","World","_cache","_events","_online","_commands","getOverview","refresh","overview","_api","_storage","with","players","created","last_activity","credit_until","getStatus","getLists","setLists","currentLists","getLogs","logs","updatePlayers","_updatePlayers","timestamp","send","getPlayer","toLocaleUpperCase","addCommand","command","has","Error","removeCommand","restart","_createWatcher","_chatWatcher","watcher","_addUser","args","handler","lines","lastUpdate","user","now","Storage","fallback","registeredExtensions","extensionRegistered","extensionDeregistered","MessageBot","_extensions","dependencies","Api","initializer","extensions","fetch","ex","creator","uninstall","_a","params","Name","NAME","safeKeyRegex","join","catch","Bot","messages","msg","super","LogParser","isValidLine","addLine","reverse","ts","raw","parser","page","getList","names","list","Set","makeSafe","encodeURIComponent","firstMatch","m","privacy","concat","link","pvp","password","size","status","response","worldStatus","AStorage","localStorage","getItem","parsed","JSON","setItem","stringify","removeItem","registerExtension","rel","href","RemovableMessageHelper","JoinListener","LeaveListener","TriggerListener","responses","checks","triggerMatches","trigger","every","AnnouncementListener","run","data","delay","tick","global","self","atoa","n","ticky","setImmediate","process","nextTick","debounce","ctx","thing","opts","evt","_once","off","c","et","emitterSnapshot","throws","listen","async","NativeCustomEvent","CustomEvent","foo","initCustomEvent","bubbles","cancelable","eventmap","eventname","ron","addEvent","removeEvent","fabricate","dragula_1","MessagesTab","setup","insertHTML","save","addMessage","matches","row","dragger","_el","_container","dataset","ui","getExports","JoinTab","LeaveTab","TriggerTab","AnnouncementTab","listeners","l","hasLoaded","delayLoad","timeout","userSend","addPlayerMessage","messageClass","chatUl","class","addGenericMessage","li","logJoins","consoleExports","logLeaves","logMessages","logOther","chatContainer","MutationObserver","total","addedHeight","scrollHeight","scrollTop","observe","childList","subtree","defaultRepo","addExtension","ids","removeExtension","extensionMap","shouldLoad","script","src","extension","values","title","description","ext_id","load","repos","repoRequests","repo","all","flatten","supported","createPage","settingDefaults","backup","location","reload","settingsRoot","def","checked","String","importBackup","display","click","File","FileReader","FileList","Blob","files","reader","readAsText","worldId","toString","hostname","confirm","pollChat","CustomBot","loadChecker","newValue","loadWarner"],"mappings":"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"}